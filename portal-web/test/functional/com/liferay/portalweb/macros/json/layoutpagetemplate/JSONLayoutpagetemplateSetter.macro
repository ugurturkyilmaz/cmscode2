definition {

	macro setClassNameId {
		Variables.assertDefined(parameterList = "${contentType}");

		if ("${contentType}" == "Web Content Article") {
			var value = "com.liferay.journal.model.JournalArticle";
		}
		else if ("${contentType}" == "Document") {
			var value = "com.liferay.portal.kernel.repository.model.FileEntry";
		}
		else if ("${contentType}" == "Blogs Entry") {
			var value = "com.liferay.blogs.model.BlogsEntry";
		}
		else if ("${contentType}" == "Category") {
			var value = "com.liferay.asset.kernel.model.AssetCategory";
		}
		else {
			fail("'value' is either invalid or not yet set.");
		}

		var classNameId = JSONClassname._getClassNameId(value = "${value}");

		return "${classNameId}";
	}

	macro setClassTypeId {
		Variables.assertDefined(parameterList = "${classNameId},${groupId},${structureName}");

		var classTypeId = JSONDDMstructure._getStructureId(
			classNameId = "${classNameId}",
			groupId = "${groupId}",
			structureName = "${structureName}");

		return "${classTypeId}";
	}

	macro setDescriptionMap {
		if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		return "${descriptionMap}";
	}

	macro setGroupId {
		Variables.assertDefined(parameterList = "${groupKey}");

		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByGroupKey(
			grandParentGroupName = "${grandParentGroupName}",
			groupKey = "${groupKey}",
			parentGroupName = "${parentGroupName}",
			site = "${site}");

		return "${groupId}";
	}

	macro setLayoutPageTemplateCollectionId {
		Variables.assertDefined(parameterList = "${groupId},${layoutPageTemplateCollectionName}");

		var layoutPageTemplateCollectionId = JSONLayoutpagetemplateAPI._getLayoutPageTemplateCollectionIdByName(
			groupId = "${groupId}",
			layoutPageTemplateCollectionName = "${layoutPageTemplateCollectionName}");

		return "${layoutPageTemplateCollectionId}";
	}

	macro setLayoutPageTemplateEntryId {
		Variables.assertDefined(parameterList = "${groupId},${layoutPageTemplateEntryName},${type}");

		if ("${type}" == "Content Page Template") {
			var type = "0";
		}
		else if ("${type}" == "Display Page Template") {
			var type = "1";
		}
		else if ("${type}" == "Master Page Template") {
			var type = "3";
		}
		else if ("${type}" == "Widget Page Template") {
			var type = "2";
		}

		var layoutPageTemplateEntryId = JSONLayoutpagetemplateAPI._getLayoutPageTemplateEntryIdByName(
			groupId = "${groupId}",
			layoutPageTemplateEntryName = "${layoutPageTemplateEntryName}",
			type = "${type}");

		return "${layoutPageTemplateEntryId}";
	}

	macro setMasterLayoutPlid {
		Variables.assertDefined(parameterList = "${groupId},${masterLayoutEntryName}");

		var masterLayoutPlid = JSONLayoutpagetemplateAPI._getMasterLayoutPlidByName(
			groupId = "${groupId}",
			masterLayoutEntryName = "${masterLayoutEntryName}");

		return "${masterLayoutPlid}";
	}

	macro setNameMap {
		Variables.assertDefined(parameterList = "${name}");

		var nameMap = '''{"en_US":"${name}"}''';

		return "${nameMap}";
	}

	macro setServiceContext {
		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = "${addGuestPermissions}",
				assetCategoryIds = "${assetCategoryIds}",
				assetTagNames = "${assetTagNames}",
				workflowAction = "${workflowAction}");
		}

		return "${serviceContext}";
	}

}