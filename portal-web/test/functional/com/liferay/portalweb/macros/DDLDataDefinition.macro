definition {

	var ddlDataDefinitionDescription = "Data Definition Description";
	var ddlDataDefinitionName = "Data Definition Name";
	var ddlListName = "List Name";

	macro _add {
		if (IsTextNotEqual(locator1 = "Portlet#HEADER", value1 = "Data Definitions")) {
			AssertTextEquals(
				locator1 = "DataEngineModal#MODAL_TITLE",
				value1 = "Data Definitions");

			SelectFrame(
				key_title = "Data Definitions",
				locator1 = "IFrame#MODAL_ANY");
		}

		LexiconEntry.gotoAdd();

		DDLDataDefinition.editName(ddlDataDefinitionName = "${ddlDataDefinitionName}");

		if (isSet(ddlDataDefinitionDescription)) {
			DDLDataDefinition._showDetails();

			Type.clickAtType(
				locator1 = "TextInput#DESCRIPTION",
				value1 = "${ddlDataDefinitionDescription}");

			DDLDataDefinition._closeDetails();
		}
	}

	macro _closeDetails {
		if (IsElementPresent.isVisible(locator1 = "TextInput#DESCRIPTION")) {
			Click(locator1 = "DDMEditStructure#DETAILS_TOGGLE");
		}

		AssertNotVisible(locator1 = "TextInput#DESCRIPTION");
	}

	macro _select {
		SelectFrame(
			key_title = "Data Definitions",
			locator1 = "IFrame#MODAL_ANY");

		var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

		AssertClick(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_LINK",
			value1 = "${ddlDataDefinitionName}");
	}

	macro _showDetails {
		if (IsElementNotPresent.isNotVisible(locator1 = "TextInput#DESCRIPTION")) {
			Click(locator1 = "DDMEditStructure#DETAILS_TOGGLE");

			if (IsElementNotPresent.isNotVisible(locator1 = "TextInput#DESCRIPTION")) {
				Click(locator1 = "DDMEditStructure#DETAILS_TOGGLE");
			}
		}

		AssertVisible(locator1 = "TextInput#DESCRIPTION");
	}

	macro addCP {
		DDLNavigator.gotoManageDataDefinitions();

		DDLDataDefinition._add(
			ddlDataDefinitionDescription = "${ddlDataDefinitionDescription}",
			ddlDataDefinitionName = "${ddlDataDefinitionName}");
	}

	macro addViaDDLDisplayPG {
		DDLDataDefinition._add(
			ddlDataDefinitionDescription = "${ddlDataDefinitionDescription}",
			ddlDataDefinitionName = "${ddlDataDefinitionName}");

		SelectFrame(value1 = "relative=top");

		DynamicDataMapping.selectDynamicDataMappingFrame();
	}

	macro clickSave {
		AssertClick(
			locator1 = "DDMEditStructure#SAVE_BUTTON",
			value1 = "Save");
	}

	macro copyCP {
		DDLNavigator.gotoManageDataDefinitions();

		var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

		Click.waitForMenuToggleJSClick(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS");

		MenuItem.click(menuItem = "Copy");

		PortletEntry.inputName(name = "${ddlDataDefinitionCopyName}");

		if ("${copyFormTemplates}" == "true") {
			Check(locator1 = "DDMSelectTemplate#COPY_FORM_TEMPLATES_CHECKBOX");
		}

		if ("${copyDisplayTemplates}" == "true") {
			Check(locator1 = "DDMSelectTemplate#COPY_DISPLAY_TEMPLATES_CHECKBOX");
		}

		AssertClick(
			locator1 = "Button#COPY",
			value1 = "Copy");

		VerifyElementPresent(locator1 = "Message#SUCCESS");

		DDLDataDefinition.viewName(ddlDataDefinitionName = "${ddlDataDefinitionCopyName}");
	}

	macro deleteCP {
		DDLNavigator.gotoManageDataDefinitions();

		var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

		Click.waitForMenuToggleJSClick(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoManageDataDefinitions();

		AssertElementNotPresent(
			key_ddlDataDefinitionName = "${ddlDataDefinitionName}",
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS");
	}

	macro deleteNoCP {
		DDLNavigator.gotoManageDataDefinitions();

		Search.searchCP(searchTerm = "${ddlDataDefinitionName}");

		Click.waitForMenuToggleJSClick(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS_1");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The structure cannot be deleted because it is required by one or more structure links.");
	}

	macro editCP {
		DDLNavigator.gotoManageDataDefinitions();

		Search.searchCP(searchTerm = "${ddlDataDefinitionName}");

		Click.waitForMenuToggleJSClick(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS_1");

		MenuItem.click(menuItem = "Edit");

		Type.clickAtType(
			locator1 = "TextInput#NAME",
			value1 = "${ddlDataDefinitionNameEdit}");

		DDLDataDefinition._showDetails();

		Type.clickAtType(
			locator1 = "TextInput#DESCRIPTION",
			value1 = "${ddlDataDefinitionDescriptionEdit}");
	}

	macro editName {
		Type.clickAtType(
			locator1 = "DDMEditStructure#NAME_FIELD",
			value1 = "${ddlDataDefinitionName}");
	}

	macro editPermissionsCP {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "${addOrRemoveViewPermission}",
			roleList = "${roleList}");
	}

	macro save {
		Click.mouseDownMouseUp(locator1 = "//span[contains(@class,'btn')][normalize-space(text())='Save']/..");

		Alert.viewSuccessMessage();
	}

	macro saveViaDDLDisplayPG {
		DDLDataDefinition.clickSave();

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro selectCP {
		DDLDataDefinition._select(ddlDataDefinitionName = "${ddlDataDefinitionName}");

		SelectFrameTop();

		AssertTextEquals(
			locator1 = "TextInput#DATA_DEFINITION",
			value1 = "${ddlDataDefinitionName}");
	}

	macro selectViaDDLDisplayPG {
		DDLDataDefinition._select(ddlDataDefinitionName = "${ddlDataDefinitionName}");

		SelectFrameTop();

		while (IsElementNotPresent(locator1 = "IFrame#MODAL_BODY")) {
			Pause(locator1 = "1000");
		}

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextEquals.assertValue(
			locator1 = "TextInput#DATA_DEFINITION",
			value1 = "${ddlDataDefinitionName}");
	}

	macro setInputFieldLocalization {
		var key_languageValue = "${languageValue}";

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${languageValue}");
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoManageDataDefinitions();

		var ddlDataDefinitionName = "Data Definition";

		Search.searchCP(searchTerm = "${ddlDataDefinitionName}");

		if (IsElementNotPresent(locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_1")) {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No Data Definitions were found.");
		}
		else {
			AssertTextNotEquals(
				locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_1",
				value1 = "Contacts");

			var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

			if (IsElementPresent(locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS_1")) {
				PortletEntry.selectAll();

				ClickNoError(locator1 = "Icon#TIMES");

				AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

				if ("${kfProcessExists}" == "true") {
					Alert.viewRequestFailedToComplete();

					AssertTextEquals.assertPartialText(
						locator1 = "Message#ERROR_2",
						value1 = "The structure cannot be deleted because it is required by one or more structure links.");
				}
				else {
					Alert.viewSuccessMessage();
				}
			}
		}
	}

	macro viewCP {
		DDLNavigator.gotoManageDataDefinitions();

		var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

		Click(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_LINK",
			value1 = "${ddlDataDefinitionName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Edit ${ddlDataDefinitionName}");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "${ddlDataDefinitionName}");

		if (isSet(ddlDataDefinitionDescription)) {
			DDLDataDefinition._showDetails();

			AssertTextEquals(
				locator1 = "TextInput#DESCRIPTION",
				value1 = "${ddlDataDefinitionDescription}");
		}

		if (isSet(fieldFieldLabel)) {
			AssertElementPresent(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD");
		}
	}

	macro viewName {
		var key_ddlDataDefinitionName = "${ddlDataDefinitionName}";

		AssertTextEquals(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME",
			value1 = "${ddlDataDefinitionName}");
	}

	macro viewParentStructureHeader {
		Click(locator1 = "DDMEditStructure#DETAILS_TOGGLE");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		var key_iframeTitle = "${assetTitle}";

		if (IsElementNotPresent(locator1 = "IFrame#IFRAME_TITLE")) {
			AssertTextEquals(
				locator1 = "Modal#HEADER",
				value1 = "${assetTitle}");
		}
		else {
			AssertTextEquals(
				locator1 = "IFrame#IFRAME_TITLE",
				value1 = "${assetTitle}");
		}
	}

}