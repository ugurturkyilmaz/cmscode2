@component-name = "portal-lima"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Announcements";

	var pageName = "Announcements Page";
	var portletName = "Announcements";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page",
			layoutTemplate = "1 Column");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page",
			widgetName = "Announcements");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONAnnouncement.deleteAnnouncement(
				groupName = "Guest",
				siteURLKey = "guest");

			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Announcements Page");
		}
	}

	@priority = "4"
	@refactordone
	test CanAddAnnouncementsEntry {
		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");
	}

	@priority = "4"
	@refactordone
	@uitest
	test CanAddAnnouncementsEntryFutureDate {
		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.addEntryWithFutureDate(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");

		Pause(locator1 = "120000");

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");
	}

	@priority = "4"
	@refactordone
	test CanAddAnnouncementsEntryPriorityImportant {
		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com",
			priority = "Important");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			priority = "Important");
	}

	@priority = "5"
	@refactordone
	test CanDeleteAnnouncementsEntry {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.deletePG(entryTitle = "Announcements Entry Title");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");
	}

	@priority = "5"
	@refactordone
	test CanEditAnnouncementsEntry {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.editPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryContentEdit = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title",
			entryTitleEdit = "Announcements Entry Title Edit",
			entryURLEdit = "http://www.alloyui.com");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title Edit");
	}

	@priority = "3"
	@refactordone
	@uitest
	test CannotAddAnnouncementsEntryPastExpirationDate {
		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com",
			expirationDate = "12/31/2013",
			pastDate = "true");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");

		AnnouncementsNavigator.opentoAdmin(
			groupName = "Guest",
			siteURLKey = "guest");

		AnnouncementsEntry.viewNoAdmin();
	}

	@priority = "4"
	@refactordone
	test CanViewAnnouncementsEntryWithDistributedScope {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page Name",
			widgetName = "Announcements");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "site-page-name",
			siteURLKey = "test-site-name",
			tabName = "unread");

		AnnouncementsEntry.addPG(
			distributionScope = "Test Site Name",
			entryContent = "Announcements Entry2 Scoped Content",
			entryTitle = "Announcements Entry2 Scoped Title",
			entryURL = "http://www.yahoo.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry2 Scoped Title");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry2 Scoped Title");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "site-page-name",
			siteURLKey = "test-site-name",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title");

		AnnouncementsEntry.viewPG(
			distributionScope = "Test Site Name",
			entryContent = "Announcements Entry2 Scoped Content",
			entryTitle = "Announcements Entry2 Scoped Title");
	}

	@priority = "3"
	@refactordone
	test CanViewAnnouncementsPagination {
		for (var entryCount : list "1,2,3,4,5,6,7") {
			JSONAnnouncement.addAnnouncement(
				announcementContent = "Announcements Entry Content ${entryCount}",
				announcementTitle = "Announcements Entry Title ${entryCount}",
				announcementURL = "http://www.liferay.com",
				userEmailAddress = "test@liferay.com",
				userPassword = "test");
		}

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsPortlet.configureDisplayCountPG(maxDisplayItems = "4");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		for (var viewEntryCount : list "4,5,6,7") {
			AnnouncementsEntry.viewPG(
				distributionScope = "General",
				entryContent = "Announcements Entry Content ${viewEntryCount}",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "1,2,3") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Announcements#CARD_VIEW_ENTRY_TITLE");
		}

		AssertClick(
			locator1 = "Pagination#NEXT_LINK",
			value1 = "Next Page");

		for (var viewEntryCount : list "1,2,3") {
			AnnouncementsEntry.viewPG(
				distributionScope = "General",
				entryContent = "Announcements Entry Content ${viewEntryCount}",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "4,5,6,7") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Announcements#CARD_VIEW_ENTRY_TITLE");
		}

		AssertClick(
			locator1 = "Pagination#PREVIOUS_LINK",
			value1 = "Previous Page");

		for (var viewEntryCount : list "4,5,6,7") {
			AnnouncementsEntry.viewPG(
				distributionScope = "General",
				entryContent = "Announcements Entry Content ${viewEntryCount}",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "1,2,3") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Announcements#CARD_VIEW_ENTRY_TITLE");
		}

		AnnouncementsNavigator.opentoAdmin(
			groupName = "Guest",
			siteURLKey = "guest");

		Pagination.changePagination(itemsPerPage = "4");

		for (var viewEntryCount : list "1,2,3,4") {
			AnnouncementsEntry.viewList(
				distributionScope = "General",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "5,6,7") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Blogs#ENTRY_TABLE_TITLE");
		}

		Click(locator1 = "Pagination#NEXT_LINK");

		for (var viewEntryCount : list "5,6,7") {
			AnnouncementsEntry.viewList(
				distributionScope = "General",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "1,2,3,4") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Blogs#ENTRY_TABLE_TITLE");
		}

		Click(locator1 = "Pagination#PREVIOUS_LINK");

		for (var viewEntryCount : list "1,2,3,4") {
			AnnouncementsEntry.viewList(
				distributionScope = "General",
				entryTitle = "Announcements Entry Title ${viewEntryCount}");
		}

		for (var viewEntryCount : list "5,6,7") {
			AssertElementNotPresent(
				key_entryTitle = "Announcements Entry Title ${viewEntryCount}",
				locator1 = "Blogs#ENTRY_TABLE_TITLE");
		}
	}

	@priority = "5"
	@refactordone
	test CanViewPreviousAnnouncementEntries {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsEntry.markAsReadPG(
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewReadPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title");

		AssertClick(
			locator1 = "Announcements#NAVIGATION_ENTRIES_UNREAD",
			value1 = "Unread");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");
	}

	@description = "This test ensures that the announcement widget follows W3C accessibility standards."
	@ignore = "true"
	@priority = "4"
	test WidgetFollowsAccessibilityStandards {
		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page",
			widgetName = "Alerts");

		Navigator.openSitePage(
			pageName = "Announcements Page",
			siteName = "Guest");

		AssertAccessible();
	}

	@description = "This test covers LPS-147716. It checks that the javascript in the user name will not be executed when viewing an announcement on page."
	@priority = "3"
	test XSSIsNotExecutedWhenViewingUsernameInAnnouncement {
		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "Account Settings");

		User.editUserInformation(userLastNameEdit = '''Test<script>alert('hello!')</script>''');

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = '''<script>alert('hello!')</script>''',
			entryURL = "http://www.liferay.com");

		AssertAlertNotPresent();
	}

}