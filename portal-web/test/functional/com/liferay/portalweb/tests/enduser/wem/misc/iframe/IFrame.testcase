@component-name = "portal-util-misc"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "IFrame Portlet";
	property testray.main.component.name = "IFrame Portlet";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Add an IFrame widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "IFrame");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "View IFrame widget is shown on the page."
	@priority = "3"
	test ViewIFrameWidget {
		task ("View IFrame widget is shown") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Portlet.viewPG(
				portletBody = "Please configure this portlet to make it visible to all users.",
				portletName = "IFrame");
		}
	}

}