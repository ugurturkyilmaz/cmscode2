@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-142486. View no alert shown when search a term with XSS in Collection Filter."
	@priority = "4"
	test SearchTermWithXSSInCollectionFilter {
		task ("Add a dynamic collection for All Types") {
			JSONAssetlist.addDynamicAssetListEntryWithItemType(
				groupName = "Test Site Name",
				itemType = "All Types",
				title = "Dynamic Collection");
		}

		task ("Add a web content") {
			JSONWebcontent.addWebContent(
				content = "Web Content Content",
				groupName = "Test Site Name",
				title = "Web Content Title");
		}

		task ("Add a Collection Display fragment to content page then select the dynamic collection") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Display");

			PageEditor.editCollectionDisplay(
				assetListName = "Dynamic Collection",
				fragmentName = "Collection Display");
		}

		task ("Add an Applied Filters below Collection Display then select the dynamic collection as Target Collection") {
			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Applied Filters",
				targetFragmentName = "Collection Display");

			PageEditor.editCollectionFilter(
				fragmentName = "Applied Filters",
				targetCollection = "Dynamic Collection");
		}

		task ("Add a Collection Filter below Applied Filters then select the dynamic collection as Target Collection and select Keywords as Filter") {
			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Filter",
				targetFragmentName = "Applied Filters");

			PageEditor.editCollectionFilter(
				filter = "Keywords",
				fragmentName = "Collection Filter",
				targetCollection = "Dynamic Collection");

			PageEditor.clickPublish();
		}

		task ("Search a term with XSS in Collection Filter") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Page.searchInCollectionFilter(searchTerm = "’;alert(‘hello’);");
		}

		task ("View alert is not shown") {
			AssertAlertNotPresent();
		}
	}

}