@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a use case for LPS-149178. The user could navigate through pages in Collection Display with pagination and Display All Collection Items."
	@priority = "4"
	test NavigateToPagesInCollectionDisplayWithDisplayAllCollectionItems {
		property portal.acceptance = "true";

		task ("Add 6 web contents") {
			for (var i : list "1,2,3,4,5,6") {
				JSONWebcontent.addWebContent(
					content = "Web Content Content ${i}",
					groupName = "Test Site Name",
					title = "Web Content Title ${i}");
			}
		}

		task ("Add a dynamic collection for All Types") {
			JSONAssetlist.addDynamicAssetListEntryWithItemType(
				groupName = "Test Site Name",
				itemType = "All Types",
				title = "Dynamic Collection");
		}

		task ("Add a Collection Display to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Display");
		}

		task ("Select the dynamic collection in Collection Display with Numeric pagination and Display All Pages") {
			PageEditor.editCollectionDisplay(
				assetListName = "Dynamic Collection",
				displayAllPages = "true",
				fragmentName = "Collection Display",
				listItemStyle = "Title",
				listStyle = "Bordered List",
				maxNumberOfItemsPerPage = "5");
		}

		task ("View only 5 web contents shown in page 1 of Collection Display in page editor") {
			var n = "1";

			for (var i : list "6,5,4,3,2") {
				AssertVisible(
					key_entryContent = "[normalize-space(text())='Web Content Title ${i}']",
					key_fragmentName = "Collection Display",
					key_position = "${n}",
					locator1 = "PageEditor#COLLECTION_ITEM_CONTENT_IN_BORDERED_LIST");

				var n = ${n} + 1;
			}
		}

		task ("View the sixth web content shown in page 2 of Collection Display in page editor") {
			Click(
				key_pageNumber = "2",
				locator1 = "Pagination#ANY_PAGE");

			AssertVisible(
				key_entryContent = "[normalize-space(text())='Web Content Title 1']",
				key_fragmentName = "Collection Display",
				key_position = "1",
				locator1 = "PageEditor#COLLECTION_ITEM_CONTENT_IN_BORDERED_LIST");

			PageEditor.clickPublish();
		}

		task ("View only 5 web contents shown in page 1 of Collection Display at view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			var n = "1";

			for (var i : list "6,5,4,3,2") {
				AssertVisible(
					key_entryContent = "[normalize-space(text())='Web Content Title ${i}']",
					key_fragmentName = "Collection Display",
					key_position = "${n}",
					locator1 = "PageEditor#COLLECTION_ITEM_CONTENT_IN_BORDERED_LIST_AT_VIEW_MODE");

				var n = ${n} + 1;
			}
		}

		task ("View the sixth web content shown in page 2 of Collection Display at view mode") {
			Click(
				key_pageNumber = "2",
				locator1 = "Pagination#ANY_PAGE");

			AssertVisible(
				key_entryContent = "[normalize-space(text())='Web Content Title 1']",
				key_fragmentName = "Collection Display",
				key_position = "1",
				locator1 = "PageEditor#COLLECTION_ITEM_CONTENT_IN_BORDERED_LIST_AT_VIEW_MODE");
		}
	}

	@description = "This is a use case for LPS-123825. The user could navigate through pages in Collection Display with the Numeric pagination."
	@priority = "5"
	@uitest
	test NavigateToPagesInCollectionDisplayWithNumericPagination {
		property portal.acceptance = "true";

		task ("Add 5 web contents") {
			for (var i : list "1,2,3,4,5") {
				JSONWebcontent.addWebContent(
					content = "Web Content Content ${i}",
					groupName = "Test Site Name",
					title = "Web Content Title ${i}");
			}
		}

		task ("Add 5 blogs entries") {
			for (var i : list "1,2,3,4,5") {
				HeadlessBlog.addBlogEntry(
					content = "Blogs Entry Content ${i}",
					groupName = "Test Site Name",
					title = "Blogs Entry Title ${i}");
			}
		}

		task ("Add 5 document entries") {
			for (var i : list "1,2,3,4,5") {
				JSONDocument.addFileWithUploadedFile(
					dmDocumentTitle = "Document Title ${i}",
					groupName = "Test Site Name",
					mimeType = "text/plain",
					sourceFileName = "Document_${i}.txt");
			}
		}

		task ("Add a dynamic collection for All Types") {
			JSONAssetlist.addDynamicAssetListEntryWithItemType(
				groupName = "Test Site Name",
				itemType = "All Types",
				title = "Dynamic Collection");
		}

		task ("Add a Collection Display to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Display");
		}

		task ("Select the dynamic collection in Collection Display") {
			PageEditor.editCollectionDisplay(
				assetListName = "Dynamic Collection",
				fragmentName = "Collection Display");
		}

		task ("View the Numeric is selected in Pagination field") {
			AssertSelectedLabel(
				key_fieldLabel = "Pagination",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Numeric");
		}

		task ("Select the None in Pagination field") {
			PageEditor.editCollectionDisplay(
				fragmentName = "Collection Display",
				pagination = "None",
				selectedName = "Dynamic Collection");
		}

		task ("View the page number, next and previous buttons not shown in Collection Display") {
			AssertElementNotPresent(
				key_pageNumber = "1",
				locator1 = "Pagination#ANY_PAGE");

			AssertElementNotPresent(
				locator1 = "Pagination#ICON",
				type = "angle-left");

			AssertElementNotPresent(
				locator1 = "Pagination#ICON",
				type = "angle-right");
		}

		task ("Select the Numeric in Pagination field, Select the 15 in Maximum Number of Items field and Select the 15 in Maximum Number of Items per Page field") {
			PageEditor.editCollectionDisplay(
				displayAllPages = "false",
				fragmentName = "Collection Display",
				maxNumberOfItemsPerPage = "15",
				maxNumberOfPagesToDisplay = "1",
				pagination = "Numeric",
				selectedName = "Dynamic Collection");
		}

		task ("View all assets shown in Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewCollectionItem(
					assetTitle = "Document Title ${i}",
					row = "${n}");

				var n = ${n} + 1;
			}

			var n = "6";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewCollectionItem(
					assetTitle = "Blogs Entry Title ${i}",
					row = "${n}");

				var n = ${n} + 1;
			}

			var n = "11";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewCollectionItem(
					assetTitle = "Web Content Title ${i}",
					row = "${n}");

				var n = ${n} + 1;
			}
		}

		task ("View only the page 1 shown in Collection Display") {
			AssertVisible(
				key_pageNumber = "1",
				locator1 = "Pagination#ANY_PAGE");

			AssertElementNotPresent(
				key_pageNumber = "2",
				locator1 = "Pagination#ANY_PAGE");
		}

		task ("View the left and right buttons are disabled") {
			AssertElementPresent(
				locator1 = "Pagination#ICON_DISABLED",
				type = "angle-left");

			AssertElementPresent(
				locator1 = "Pagination#ICON_DISABLED",
				type = "angle-right");
		}

		task ("Select the 5 in Maximum Number of Items per Page field") {
			PageEditor.editCollectionDisplay(
				fragmentName = "Collection Display",
				maxNumberOfItemsPerPage = "5",
				maxNumberOfPagesToDisplay = "3",
				selectedName = "Dynamic Collection");
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewCollectionItem(
					assetTitle = "Document Title ${i}",
					row = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Add a Heading fragment into Collection Display") {
			PageEditor.addFragmentToCollectionDisplay(
				collectionName = "Basic Components",
				entryTitle = "Document Title 5",
				fragmentName = "Heading");
		}

		task ("Map the Title field to editable field") {
			PageEditorMapping.mapEditableFieldToCollectionItems(
				field = "Title",
				fragmentName = "Heading",
				id = "element-text");
		}

		task ("Navigate to page 3 in Collection Display") {
			Click(
				key_pageNumber = "3",
				locator1 = "Pagination#ANY_PAGE");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Web Content Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to previous page in Collection Display") {
			Click(
				locator1 = "Pagination#ICON",
				type = "angle-left");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Blogs Entry Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Open the Preview modal") {
			PageEditor.openPreviewMode();
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Document Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to page 2 in Collection Display") {
			Click(
				key_pageNumber = "2",
				locator1 = "Pagination#ANY_PAGE");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Blogs Entry Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to next page in Collection Display") {
			Click(
				locator1 = "Pagination#ICON",
				type = "angle-right");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Web Content Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");

			IFrame.closeFrame();

			PageEditor.clickPublish();
		}

		task ("Navigate to page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Document Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to page 3 in Collection Display") {
			Click(
				key_pageNumber = "3",
				locator1 = "Pagination#ANY_PAGE");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Web Content Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to previous page in Collection Display") {
			Click(
				locator1 = "Pagination#ICON",
				type = "angle-left");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Blogs Entry Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}
	}

	@description = "This is a use case for LPS-123825. The user could navigate through pages in Collection Display with the Simple pagination."
	@priority = "5"
	@uitest
	test NavigateToPagesInCollectionDisplayWithSimplePagination {
		property portal.acceptance = "true";

		task ("Add 5 web contents") {
			for (var i : list "1,2,3,4,5") {
				JSONWebcontent.addWebContent(
					content = "Web Content Content ${i}",
					groupName = "Test Site Name",
					title = "Web Content Title ${i}");
			}
		}

		task ("Add 5 blogs entries") {
			for (var i : list "1,2,3,4,5") {
				HeadlessBlog.addBlogEntry(
					content = "Blogs Entry Content ${i}",
					groupName = "Test Site Name",
					title = "Blogs Entry Title ${i}");
			}
		}

		task ("Add 5 document entries") {
			for (var i : list "1,2,3,4,5") {
				JSONDocument.addFileWithUploadedFile(
					dmDocumentTitle = "Document Title ${i}",
					groupName = "Test Site Name",
					mimeType = "text/plain",
					sourceFileName = "Document_${i}.txt");
			}
		}

		task ("Add a dynamic collection for All Types") {
			JSONAssetlist.addDynamicAssetListEntryWithItemType(
				groupName = "Test Site Name",
				itemType = "All Types",
				title = "Dynamic Collection");
		}

		task ("Add a Collection Display to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Content Display",
				fragmentName = "Collection Display");
		}

		task ("Select the dynamic collection in Collection Display") {
			PageEditor.editCollectionDisplay(
				assetListName = "Dynamic Collection",
				fragmentName = "Collection Display");
		}

		task ("Add a Heading fragment into Collection Display") {
			PageEditor.addFragmentToCollectionDisplay(
				collectionName = "Basic Components",
				entryTitle = "Document Title 5",
				fragmentName = "Heading");
		}

		task ("Map the Title field to editable field") {
			PageEditorMapping.mapEditableFieldToCollectionItems(
				field = "Title",
				fragmentName = "Heading",
				id = "element-text");
		}

		task ("View the Numeric is selected in Pagination field") {
			PageEditor.gotoConfiguration(fragmentName = "Collection Display");

			AssertSelectedLabel(
				key_fieldLabel = "Pagination",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "Numeric");
		}

		task ("View the Previous and Next buttons not shown in Collection Display") {
			for (var buttonName : list "Previous,Next") {
				AssertElementNotPresent(
					key_text = "${buttonName}",
					locator1 = "Button#ANY");
			}
		}

		task ("Select the Simple in Pagination field, Select the 15 in Maximum Number of Items field and Select the 15 in Maximum Number of Items per Page field") {
			PageEditor.editCollectionDisplay(
				displayAllPages = "false",
				fragmentName = "Collection Display",
				maxNumberOfItemsPerPage = "15",
				maxNumberOfPagesToDisplay = "1",
				pagination = "Simple",
				selectedName = "Dynamic Collection");
		}

		task ("View all assets shown in Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Document Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			var n = "6";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Blogs Entry Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			var n = "11";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Web Content Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}
		}

		task ("View the Previous and Next buttons are disabled") {
			for (var buttonName : list "Previous,Next") {
				AssertElementPresent(
					key_text = "${buttonName}",
					locator1 = "Button#ANY_DISABLED");
			}
		}

		task ("Select the 5 in Maximum Number of Items per Page field") {
			PageEditor.editCollectionDisplay(
				fragmentName = "Collection Display",
				maxNumberOfItemsPerPage = "5",
				maxNumberOfPagesToDisplay = "3",
				selectedName = "Dynamic Collection");
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Document Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Blogs Entry Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				PageEditor.viewFragmentEditableText(
					editableText = "Web Content Title ${i}",
					fragmentName = "Heading",
					id = "element-text",
					position = "${n}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Open the Preview modal") {
			PageEditor.openPreviewMode();
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Document Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Blogs Entry Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Web Content Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");

			IFrame.closeFrame();

			PageEditor.clickPublish();
		}

		task ("Navigate to page in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("View only the 5 documents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Document Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 blogs entries shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Blogs Entry Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}

		task ("Navigate to the Next page of Collection Display") {
			Click(
				key_text = "Next",
				locator1 = "Button#ANY");
		}

		task ("View only the 5 web contents shown in current page of Collection Display") {
			var n = "1";

			for (var i : list "5,4,3,2,1") {
				ContentPages.viewFragmentText(
					fragmentName = "heading",
					id = "element-text",
					position = "${n}",
					text = "Web Content Title ${i}");

				var n = ${n} + 1;
			}

			AssertElementNotPresent(
				key_colPosition = "1",
				key_fragmentName = "heading",
				key_rowPosition = "6",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_INLINE_CONTENT_IN_COLLECTION_DISPLAY");
		}
	}

}