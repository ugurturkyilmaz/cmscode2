@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-95042, LPS-108339 and LPS-122017. View the Banner Center in content page. Can add Banner Center directly without Container to page."
	@priority = "4"
	test ViewBannerCenterInContentPage {
		task ("Add a Banner Center to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Featured Content",
				composition = "true",
				fragmentName = "Banner Center");
		}

		task ("View the Banner Center is not inside of Container element") {
			AssertElementNotPresent(
				key_elementHeader = "//div[@aria-label='Container']//div[contains(@class,'page-editor__topper__content')]//div[contains(@class,'bg-gray500Color')][contains(@class,'page-editor__container')]",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");
		}

		task ("View the Banner Center shown in page editor") {
			PageEditor.viewFragmentEditableText(
				editableText = "Banner Title Example",
				fragmentName = "Heading",
				id = "element-text");

			PageEditor.viewFragmentEditableText(
				editableText = "This is a simple banner component that you can use when you need extra attention to featured content or information.",
				fragmentName = "Paragraph",
				id = "element-text");

			PageEditor.viewFragmentEditableText(
				editableText = "Go Somewhere",
				fragmentName = "Button",
				id = "link");

			PageEditor.viewContainerStyle(backgroundColor = "gray-500");

			PageEditor.clickPublish();
		}

		task ("View the Banner Center shown in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			ContentPages.viewFragmentText(
				fragmentName = "heading",
				id = "element-text",
				text = "Banner Title Example");

			ContentPages.viewFragmentText(
				fragmentName = "paragraph",
				id = "element-text",
				text = "This is a simple banner component that you can use when you need extra attention to featured content or information.");

			ContentPages.viewFragmentText(
				fragmentName = "button",
				id = "link",
				text = "Go Somewhere");

			AssertVisible(
				backgroundImageStyle = "background-color: var(--gray-500)",
				locator1 = "Fragment#BACKGROUND_IMAGE_STYLE",
				position = "1");
		}
	}

}