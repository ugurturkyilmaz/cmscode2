@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "CAPTCHA";

	setUp {
		TestCase.setUpPortalInstance();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "This is a use case for LRQA-29540. Verify CAPTCHA is enabled when creating an account."
	@priority = "4"
	test AssertCaptchaEnabled {
		property captcha.enabled = "true";
		property portal.acceptance = "true";

		task ("View captcha") {
			SignInNavigator.gotoCreateAccount();

			User.viewCaptchaPG(captchaType = "captcha");
		}
	}

	@description = "This is a use case for LPS-84310. Verify reCAPTCHA is enabled in account creation after deploying a CAPTCHA OSGi config file."
	@priority = "4"
	test AssertRecaptchaEnabled {
		property captcha.enabled = "true";
		property osgi.module.configuration.file.names = "com.liferay.captcha.configuration.CaptchaConfiguration.config";
		property osgi.module.configurations = "maxChallenges=&quot;0&quot;";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "Captcha#ViewRecaptchaEnabled";

		var recaptchaPrivateKey = PropsUtil.get("recaptcha.private.key");
		var recaptchaPublicKey = PropsUtil.get("recaptcha.public.key");

		task ("go to reCAPTCHA setting") {
			User.firstLoginPG();

			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Security Tools",
				configurationName = "CAPTCHA",
				configurationScope = "System Scope");

			SystemSettings.selectOptionSetting(
				fieldName = "CAPTCHA Engine",
				selectOption = "reCAPTCHA");
		}

		task ("Edit reCAPTCHA private key") {
			SystemSettings.editTextAreaSetting(
				settingName = "reCAPTCHA Private Key",
				settingValue = "${recaptchaPrivateKey}");
		}

		task ("Edit reCAPTCHA public key and save configuration") {
			SystemSettings.editTextAreaSetting(
				settingName = "reCAPTCHA Public Key",
				settingValue = "${recaptchaPublicKey}");

			SystemSettings.saveConfiguration();
		}

		task ("Logout and view captcha") {
			User.logoutPG();

			SignInNavigator.gotoCreateAccount();

			User.viewCaptchaPG(captchaType = "recaptcha");
		}
	}

}