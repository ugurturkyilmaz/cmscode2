@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "User Groups";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONUser.tearDownNonAdminUsers();

			UserGroup.tearDownCP();

			Role.tearDownCP();

			Site.tearDownCP();

			Organization.tearDownCP();
		}
	}

	@priority = "3"
	test ExportUserGroupMembers {
		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		for (var userNumber : list "1,2") {
			JSONUser.addUser(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userFirstName = "userfn${userNumber}",
				userLastName = "userln${userNumber}",
				userScreenName = "usersn${userNumber}");

			JSONUser.addUserToUserGroup(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userGroupName = "UG UserGroup Name");
		}

		UserGroup.openUserGroupsAdmin();

		LAR.exportUserGroups(larFileName = "User_Group_Members.lar");
	}

	@priority = "3"
	test PredefinedPagesCanBeAdded {
		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG User Group Description",
			userGroupName = "UG User Group");

		JSONUserGroup.addLayout(
			layoutName = "UG Public Page",
			userGroupName = "UG User Group");

		JSONUserGroup.addLayout(
			layoutName = "UG Private Page",
			privateLayout = "true",
			userGroupName = "UG User Group");

		UserGroup.openUserGroupsAdmin();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Go to Profile Pages",
			rowEntry = "UG User Group");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		SelectWindow(locator1 = "title=UG Public Page - UG User Group - ${siteName}");

		Page.viewCurrentPage(pageName = "UG Public Page");

		Navigator.closeWindow();

		UserGroup.openUserGroupsAdmin();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Go to Dashboard Pages",
			rowEntry = "UG User Group");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		SelectWindow(locator1 = "title=UG Private Page - UG User Group - ${siteName}");

		Page.viewCurrentPage(pageName = "UG Private Page");
	}

	@priority = "4"
	test UserGroupSiteTemplates {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property test.name.skip.portal.instance = "UsergroupsUsecase#UserGroupSiteTemplates";

		SiteTemplates.addCP(
			disableChanges = "true",
			siteTemplateName = "Site Template Name");

		SiteTemplates.addSitePageViaSiteTemplateCP(
			pageName = "Wiki Page Name",
			siteTemplateName = "Site Template Name");

		SearchAdministration.executeReindex();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		JSONUser.addUserToUserGroup(
			userEmailAddress = "test@liferay.com",
			userGroupName = "UG UserGroup Name");

		UserGroup.openUserGroupsAdmin();

		UserGroup.editCP(
			userGroupName = "UG UserGroup Name",
			userGroupSite = "Site Template Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		Page.viewSpecificPG(pageNameList = "My Profile,Home,Wiki Page Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		Page.viewSpecificPG(pageNameList = "My Dashboard");

		Page.viewNoPG(pageName = "Home");

		Page.viewNoPG(pageName = "Wiki Page Name");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		Page.viewSpecificPG(pageNameList = "My Profile");

		Page.viewNoPG(pageName = "Home");

		Page.viewNoPG(pageName = "Wiki Page Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		Page.viewSpecificPG(pageNameList = "My Dashboard");

		Page.viewNoPG(pageName = "Home");

		Page.viewNoPG(pageName = "Wiki Page Name");

		JSONUser.addUserToUserGroup(
			userEmailAddress = "userea@liferay.com",
			userGroupName = "UG UserGroup Name");

		Refresh();

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		Page.viewSpecificPG(pageNameList = "My Profile,Home,Wiki Page Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		Page.viewSpecificPG(pageNameList = "My Dashboard");

		Page.viewNoPG(pageName = "Home");

		Page.viewNoPG(pageName = "Wiki Page Name");
	}

}