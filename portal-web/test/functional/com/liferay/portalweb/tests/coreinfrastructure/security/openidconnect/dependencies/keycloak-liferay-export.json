{
	"accessCodeLifespan": 60,
	"accessCodeLifespanLogin": 1800,
	"accessCodeLifespanUserAction": 300,
	"accessTokenLifespan": 60,
	"accessTokenLifespanForImplicitFlow": 900,
	"actionTokenGeneratedByAdminLifespan": 43200,
	"actionTokenGeneratedByUserLifespan": 300,
	"adminEventsDetailsEnabled": false,
	"adminEventsEnabled": false,
	"attributes": {
		"cibaAuthRequestedUserHint": "login_hint",
		"cibaBackchannelTokenDeliveryMode": "poll",
		"cibaExpiresIn": "120",
		"cibaInterval": "5",
		"clientOfflineSessionIdleTimeout": "0",
		"clientOfflineSessionMaxLifespan": "0",
		"clientSessionIdleTimeout": "0",
		"clientSessionMaxLifespan": "0",
		"oauth2DeviceCodeLifespan": "600",
		"oauth2DevicePollingInterval": "600",
		"parRequestUriLifespan": "60"
	},
	"authenticationFlows": [
		{
			"alias": "Account verification options",
			"authenticationExecutions": [
				{
					"authenticator": "idp-email-verification",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Verify Existing Account by Re-authentication",
					"priority": 20,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Method with which to verity the existing account",
			"id": "e56c267a-ef7a-404d-bd38-cceb8b864b59",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Authentication Options",
			"authenticationExecutions": [
				{
					"authenticator": "basic-auth",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "basic-auth-otp",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "DISABLED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 30,
					"requirement": "DISABLED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Authentication options.",
			"id": "96a89d78-aab5-4ae8-b219-34bc600c4817",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Browser - Conditional OTP",
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Flow to determine if the OTP is required for the authentication",
			"id": "783786ec-7ee0-4e4b-b450-3e95a91e4d54",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Direct Grant - Conditional OTP",
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-otp",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Flow to determine if the OTP is required for the authentication",
			"id": "45ef1741-889f-473a-9220-f79159ff1e2d",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "First broker login - Conditional OTP",
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Flow to determine if the OTP is required for the authentication",
			"id": "58a66f88-93b3-442f-a785-fb0b99af3745",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Handle Existing Account",
			"authenticationExecutions": [
				{
					"authenticator": "idp-confirm-link",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Account verification options",
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
			"id": "994fb6b7-9175-453c-aece-0b0d0514d04b",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Reset - Conditional OTP",
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-otp",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
			"id": "bc5f9ebc-cf07-4763-9752-e1e1a2978732",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "User creation or linking",
			"authenticationExecutions": [
				{
					"authenticator": "idp-create-user-if-unique",
					"authenticatorConfig": "create unique user config",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Handle Existing Account",
					"priority": 20,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Flow for the existing/non-existing user alternatives",
			"id": "7804f00f-a955-4eb1-85c5-daa567eed537",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "Verify Existing Account by Re-authentication",
			"authenticationExecutions": [
				{
					"authenticator": "idp-username-password-form",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "First broker login - Conditional OTP",
					"priority": 20,
					"requirement": "CONDITIONAL",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Reauthentication of existing account",
			"id": "2ff24274-b830-4d48-b335-29f396f52073",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "browser",
			"authenticationExecutions": [
				{
					"authenticator": "auth-cookie",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "DISABLED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "identity-provider-redirector",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 25,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "forms",
					"priority": 30,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "browser based authentication",
			"id": "ea1c31d9-e4fa-4302-97d9-90dde21cd3cc",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "clients",
			"authenticationExecutions": [
				{
					"authenticator": "client-secret",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-jwt",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-secret-jwt",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 30,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				},
				{
					"authenticator": "client-x509",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 40,
					"requirement": "ALTERNATIVE",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Base authentication for clients",
			"id": "ec78443a-642c-42b0-bbc7-69d13e9474df",
			"providerId": "client-flow",
			"topLevel": true
		},
		{
			"alias": "direct grant",
			"authenticationExecutions": [
				{
					"authenticator": "direct-grant-validate-username",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "direct-grant-validate-password",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Direct Grant - Conditional OTP",
					"priority": 30,
					"requirement": "CONDITIONAL",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "OpenID Connect Resource Owner Grant",
			"id": "43f86141-c83a-4abe-a83c-81ab0c504868",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "docker auth",
			"authenticationExecutions": [
				{
					"authenticator": "docker-http-basic-authenticator",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Used by Docker clients to authenticate against the IDP",
			"id": "2feeca01-4b8d-47f8-a41c-ed395785764e",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "first broker login",
			"authenticationExecutions": [
				{
					"authenticator": "idp-review-profile",
					"authenticatorConfig": "review profile config",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "User creation or linking",
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
			"id": "016bd3af-e2da-44c6-a776-0978a79be90a",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "forms",
			"authenticationExecutions": [
				{
					"authenticator": "auth-username-password-form",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Browser - Conditional OTP",
					"priority": 20,
					"requirement": "CONDITIONAL",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Username, password, otp and other auth forms.",
			"id": "e5faf992-ce5f-4d8d-853f-4687fd915a88",
			"providerId": "basic-flow",
			"topLevel": false
		},
		{
			"alias": "http challenge",
			"authenticationExecutions": [
				{
					"authenticator": "no-cookie-redirect",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Authentication Options",
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
			"id": "21b0a0b0-0dce-4747-9dc7-8c78104d4888",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "registration",
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "registration form",
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "registration flow",
			"id": "43a8c78c-e3b5-4b9c-85a0-e7fb0257fc33",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "registration form",
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-profile-action",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 40,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-password-action",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 50,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 60,
					"requirement": "DISABLED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "registration form",
			"id": "400e87ed-e47d-41c3-9a2d-516b1087acb6",
			"providerId": "form-flow",
			"topLevel": false
		},
		{
			"alias": "reset credentials",
			"authenticationExecutions": [
				{
					"authenticator": "reset-credentials-choose-user",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-credential-email",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 20,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticator": "reset-password",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 30,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				},
				{
					"authenticatorFlow": true,
					"autheticatorFlow": true,
					"flowAlias": "Reset - Conditional OTP",
					"priority": 40,
					"requirement": "CONDITIONAL",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "Reset credentials for a user if they forgot their password or something",
			"id": "334dfb69-2f5e-41f3-a50f-9f14a7b23abb",
			"providerId": "basic-flow",
			"topLevel": true
		},
		{
			"alias": "saml ecp",
			"authenticationExecutions": [
				{
					"authenticator": "http-basic-authenticator",
					"authenticatorFlow": false,
					"autheticatorFlow": false,
					"priority": 10,
					"requirement": "REQUIRED",
					"userSetupAllowed": false
				}
			],
			"builtIn": true,
			"description": "SAML ECP Profile Authentication Flow",
			"id": "3c8cb819-6b93-4ab7-9de8-bc9ca73f3208",
			"providerId": "basic-flow",
			"topLevel": true
		}
	],
	"authenticatorConfig": [
		{
			"alias": "create unique user config",
			"config": {
				"require.password.update.after.registration": "false"
			},
			"id": "9d913ffe-d6f0-4927-9627-5070e9402548"
		},
		{
			"alias": "review profile config",
			"config": {
				"update.profile.on.first.login": "missing"
			},
			"id": "0dc4af62-3d09-4cb1-b345-1a2ff9043c65"
		}
	],
	"browserFlow": "browser",
	"browserSecurityHeaders": {
		"contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
		"contentSecurityPolicyReportOnly": "",
		"strictTransportSecurity": "max-age=31536000; includeSubDomains",
		"xContentTypeOptions": "nosniff",
		"xFrameOptions": "SAMEORIGIN",
		"xRobotsTag": "none",
		"xXSSProtection": "1; mode=block"
	},
	"bruteForceProtected": false,
	"clientAuthenticationFlow": "clients",
	"clientOfflineSessionIdleTimeout": 0,
	"clientOfflineSessionMaxLifespan": 0,
	"clientPolicies": {
		"policies": [
		]
	},
	"clientProfiles": {
		"profiles": [
		]
	},
	"clientScopeMappings": {
		"account": [
			{
				"client": "account-console",
				"roles": [
					"manage-account"
				]
			}
		]
	},
	"clientScopes": [
		{
			"attributes": {
				"consent.screen.text": "${samlRoleListScopeConsentText}",
				"display.on.consent.screen": "true"
			},
			"description": "SAML role list",
			"id": "5069262b-747e-4914-9353-0970d9775d90",
			"name": "role_list",
			"protocol": "saml",
			"protocolMappers": [
				{
					"config": {
						"attribute.name": "Role",
						"attribute.nameformat": "Basic",
						"single": "false"
					},
					"consentRequired": false,
					"id": "5b602038-d486-44e8-bb5c-a997bd73f594",
					"name": "role list",
					"protocol": "saml",
					"protocolMapper": "saml-role-list-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${rolesScopeConsentText}",
				"display.on.consent.screen": "true",
				"include.in.token.scope": "false"
			},
			"description": "OpenID Connect scope for add user roles to the access token",
			"id": "e4a75ecf-6ab9-4a7f-ae7f-c0aa7964cfae",
			"name": "roles",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "realm_access.roles",
						"jsonType.label": "String",
						"multivalued": "true",
						"user.attribute": "foo"
					},
					"consentRequired": false,
					"id": "1d0324be-fac2-453e-8b75-26a1a99a610d",
					"name": "realm roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper"
				},
				{
					"config": {
					},
					"consentRequired": false,
					"id": "1de9c5b0-041e-41b2-9d5b-8b556f5aca96",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "resource_access.${client_id}.roles",
						"jsonType.label": "String",
						"multivalued": "true",
						"user.attribute": "foo"
					},
					"consentRequired": false,
					"id": "34e4bdd0-4e45-46f0-85de-662c1ad38773",
					"name": "client roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-client-role-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "",
				"display.on.consent.screen": "false",
				"include.in.token.scope": "false"
			},
			"description": "OpenID Connect scope for add allowed web origins to the access token",
			"id": "00bd3cf4-097d-4912-814a-a00915852b80",
			"name": "web-origins",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
					},
					"consentRequired": false,
					"id": "051259ef-1c6d-4749-a8c3-1734f146a6e3",
					"name": "allowed web origins",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-allowed-origins-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${emailScopeConsentText}",
				"display.on.consent.screen": "true",
				"include.in.token.scope": "true"
			},
			"description": "OpenID Connect built-in scope:email",
			"id": "5f77d9fa-8def-49ff-b3c1-29d7878389d0",
			"name": "email",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "email_verified",
						"id.token.claim": "true",
						"jsonType.label": "boolean",
						"user.attribute": "emailVerified",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "00e70595-0c5e-46d7-b376-5f921000954f",
					"name": "email verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "email",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "email",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "658c6243-58b0-4fef-8fa7-c229e0c948a8",
					"name": "email",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${profileScopeConsentText}",
				"display.on.consent.screen": "true",
				"include.in.token.scope": "true"
			},
			"description": "OpenID Connect built-in scope:profile",
			"id": "1a009e40-af2d-4f5e-a9d8-7f4961481c09",
			"name": "profile",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "profile",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "profile",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "84f04691-99b0-4223-a14e-667ed56f7cc9",
					"name": "profile",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "middle_name",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "middleName",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "c75d9333-e069-40e8-a61c-077a6ff967c5",
					"name": "middle name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "birthdate",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "birthdate",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "622cc83f-85e3-4073-bde3-65809400a4c0",
					"name": "birthdate",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "given_name",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "firstName",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "c6672301-3f3d-43c1-afee-05ee91db7b12",
					"name": "given name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "nickname",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "nickname",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "25cea0b2-d34d-45bb-875c-c2a72fecebd3",
					"name": "nickname",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "website",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "website",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "de5f5bfd-86ea-40d1-a83d-d76d942abc36",
					"name": "website",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "locale",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "locale",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "eb6676f9-cb24-40f3-aad3-d141dea4100a",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "family_name",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "lastName",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "f264b253-e630-4cc6-8860-d803e1f57c48",
					"name": "family name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "zoneinfo",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "zoneinfo",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "f38334d4-38c4-46d1-ae6c-eccd562504ed",
					"name": "zoneinfo",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "preferred_username",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "username",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "d0c7d708-8e0c-489d-87e4-bcc4f1816a95",
					"name": "username",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "updated_at",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "updatedAt",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "fe995e25-0bb5-42df-a91e-1bd7478ac157",
					"name": "updated at",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"id.token.claim": "true",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "1bc0f4d5-297f-44a9-be5f-8e1dae486dab",
					"name": "full name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-full-name-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "picture",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "picture",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "7bfcebee-5970-4a3e-a718-22e917e33f83",
					"name": "picture",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "gender",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "gender",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "c2a824c6-4055-44da-a3e4-bd9faea10156",
					"name": "gender",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${offlineAccessScopeConsentText}",
				"display.on.consent.screen": "true"
			},
			"description": "OpenID Connect built-in scope:offline_access",
			"id": "0ad120c0-4f8d-43d1-a2d4-7c8376d29a12",
			"name": "offline_access",
			"protocol": "openid-connect"
		},
		{
			"attributes": {
				"display.on.consent.screen": "false",
				"include.in.token.scope": "true"
			},
			"description": "Microprofile - JWT built-in scope",
			"id": "a26b1ff7-cdf5-4c5c-b7cd-9eadb4f158a1",
			"name": "microprofile-jwt",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "groups",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"multivalued": "true",
						"user.attribute": "foo",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "24766650-ac34-4003-a4f5-40517ad48d2f",
					"name": "groups",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "upn",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "username",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "35e3be37-4a34-4165-a4a9-b277795e47d9",
					"name": "upn",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${addressScopeConsentText}",
				"display.on.consent.screen": "true",
				"include.in.token.scope": "true"
			},
			"description": "OpenID Connect built-in scope:address",
			"id": "f6dbb687-31a8-44a0-b259-d6082d46fb8b",
			"name": "address",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"id.token.claim": "true",
						"user.attribute.country": "country",
						"user.attribute.formatted": "formatted",
						"user.attribute.locality": "locality",
						"user.attribute.postal_code": "postal_code",
						"user.attribute.region": "region",
						"user.attribute.street": "street",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "91d0d14a-46f1-4217-aa88-ed2c4c181ffc",
					"name": "address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-address-mapper"
				}
			]
		},
		{
			"attributes": {
				"consent.screen.text": "${phoneScopeConsentText}",
				"display.on.consent.screen": "true",
				"include.in.token.scope": "true"
			},
			"description": "OpenID Connect built-in scope:phone",
			"id": "c067c2e3-7932-4b46-9df4-89b58e2ea648",
			"name": "phone",
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "phone_number",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "phoneNumber",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "d3820456-3cb6-455f-9969-72e8c366d8f6",
					"name": "phone number",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				},
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "phone_number_verified",
						"id.token.claim": "true",
						"jsonType.label": "boolean",
						"user.attribute": "phoneNumberVerified",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "93ee0bc5-164e-407f-a22f-764879fd294e",
					"name": "phone number verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				}
			]
		}
	],
	"clientSessionIdleTimeout": 0,
	"clientSessionMaxLifespan": 0,
	"clients": [
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
			},
			"authenticationFlowBindingOverrides": {
			},
			"baseUrl": "/realms/master/account/",
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "account",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": false,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
			"implicitFlowEnabled": false,
			"name": "${client_account}",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": true,
			"redirectUris": [
				"/realms/master/account/*"
			],
			"rootUrl": "${authBaseUrl}",
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
			]
		},
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {
			},
			"baseUrl": "/realms/master/account/",
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "account-console",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": false,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "014ee8af-1fc8-42c5-af05-a70ea0895de6",
			"implicitFlowEnabled": false,
			"name": "${client_account-console}",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
					},
					"consentRequired": false,
					"id": "012f2fbc-9943-41b8-8173-5af53d60d02f",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper"
				}
			],
			"publicClient": true,
			"redirectUris": [
				"/realms/master/account/*"
			],
			"rootUrl": "${authBaseUrl}",
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
			]
		},
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
			},
			"authenticationFlowBindingOverrides": {
			},
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "admin-cli",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": true,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "468dd0ed-9fc8-4887-8dbf-44e08118669c",
			"implicitFlowEnabled": false,
			"name": "${client_admin-cli}",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": true,
			"redirectUris": [
			],
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": false,
			"surrogateAuthRequired": false,
			"webOrigins": [
			]
		},
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
			},
			"authenticationFlowBindingOverrides": {
			},
			"bearerOnly": true,
			"clientAuthenticatorType": "client-secret",
			"clientId": "broker",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": false,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "89a96916-283a-468d-8f73-a2ab93b6e727",
			"implicitFlowEnabled": false,
			"name": "${client_broker}",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": false,
			"redirectUris": [
			],
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
			]
		},
		{
			"adminUrl": "http://localhost:8080",
			"alwaysDisplayInConsole": false,
			"attributes": {
				"backchannel.logout.revoke.offline.tokens": "false",
				"backchannel.logout.session.required": "true",
				"client_credentials.use_refresh_token": "false",
				"display.on.consent.screen": "false",
				"exclude.session.state.from.auth.response": "false",
				"id.token.as.detached.signature": "false",
				"oauth2.device.authorization.grant.enabled": "false",
				"oidc.ciba.grant.enabled": "false",
				"require.pushed.authorization.requests": "false",
				"saml.artifact.binding": "false",
				"saml.assertion.signature": "false",
				"saml.authnstatement": "false",
				"saml.client.signature": "false",
				"saml.encrypt": "false",
				"saml.force.post.binding": "false",
				"saml.multivalued.roles": "false",
				"saml.onetimeuse.condition": "false",
				"saml.server.signature": "false",
				"saml.server.signature.keyinfo.ext": "false",
				"saml_force_name_id_format": "false",
				"tls.client.certificate.bound.access.tokens": "false",
				"use.refresh.tokens": "true"
			},
			"authenticationFlowBindingOverrides": {
			},
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "liferay",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": true,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": true,
			"id": "00702889-806a-4b6b-aea3-8e269165d51f",
			"implicitFlowEnabled": false,
			"nodeReRegistrationTimeout": -1,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": false,
			"redirectUris": [
				"http://localhost:8080/*"
			],
			"rootUrl": "http://localhost:8080",
			"secret": "**********",
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
				"http://localhost:8080"
			]
		},
		{
			"adminUrl": "http://localhost:8080",
			"alwaysDisplayInConsole": false,
			"attributes": {
				"backchannel.logout.revoke.offline.tokens": "false",
				"backchannel.logout.session.required": "true",
				"client_credentials.use_refresh_token": "false",
				"display.on.consent.screen": "false",
				"exclude.session.state.from.auth.response": "false",
				"id.token.as.detached.signature": "false",
				"oauth2.device.authorization.grant.enabled": "false",
				"oidc.ciba.grant.enabled": "false",
				"require.pushed.authorization.requests": "false",
				"saml.artifact.binding": "false",
				"saml.assertion.signature": "false",
				"saml.authnstatement": "false",
				"saml.client.signature": "false",
				"saml.encrypt": "false",
				"saml.force.post.binding": "false",
				"saml.multivalued.roles": "false",
				"saml.onetimeuse.condition": "false",
				"saml.server.signature": "false",
				"saml.server.signature.keyinfo.ext": "false",
				"saml_force_name_id_format": "false",
				"tls.client.certificate.bound.access.tokens": "false",
				"use.refresh.tokens": "true"
			},
			"authenticationFlowBindingOverrides": {
			},
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "liferay-system-level",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": true,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": true,
			"id": "d4cb435b-2c94-4b80-8ba7-761de5086e3b",
			"implicitFlowEnabled": false,
			"nodeReRegistrationTimeout": -1,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": false,
			"redirectUris": [
				"http://localhost:8080/*"
			],
			"rootUrl": "http://localhost:8080",
			"secret": "449c61a0-69b5-4202-8470-202b187a9414",
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
				"http://localhost:8080"
			]
		},
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
			},
			"authenticationFlowBindingOverrides": {
			},
			"bearerOnly": true,
			"clientAuthenticatorType": "client-secret",
			"clientId": "master-realm",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": false,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "a1661650-7fd3-4102-ba43-c55da68575e5",
			"implicitFlowEnabled": false,
			"name": "master Realm",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"publicClient": false,
			"redirectUris": [
			],
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
			]
		},
		{
			"alwaysDisplayInConsole": false,
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {
			},
			"baseUrl": "/admin/master/console/",
			"bearerOnly": false,
			"clientAuthenticatorType": "client-secret",
			"clientId": "security-admin-console",
			"consentRequired": false,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"directAccessGrantsEnabled": false,
			"enabled": true,
			"frontchannelLogout": false,
			"fullScopeAllowed": false,
			"id": "f7a83cc4-76fa-48b1-be48-288ec2825d26",
			"implicitFlowEnabled": false,
			"name": "${client_security-admin-console}",
			"nodeReRegistrationTimeout": 0,
			"notBefore": 0,
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			],
			"protocol": "openid-connect",
			"protocolMappers": [
				{
					"config": {
						"access.token.claim": "true",
						"claim.name": "locale",
						"id.token.claim": "true",
						"jsonType.label": "String",
						"user.attribute": "locale",
						"userinfo.token.claim": "true"
					},
					"consentRequired": false,
					"id": "124b234b-111e-4b21-8311-38e20501389e",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper"
				}
			],
			"publicClient": true,
			"redirectUris": [
				"/admin/master/console/*"
			],
			"rootUrl": "${authAdminUrl}",
			"serviceAccountsEnabled": false,
			"standardFlowEnabled": true,
			"surrogateAuthRequired": false,
			"webOrigins": [
				"+"
			]
		}
	],
	"components": {
		"org.keycloak.keys.KeyProvider": [
			{
				"config": {
					"keyUse": [
						"enc"
					],
					"priority": [
						"100"
					]
				},
				"id": "bfe988f4-e30f-488f-92ef-022f2750d100",
				"name": "rsa-enc-generated",
				"providerId": "rsa-generated",
				"subComponents": {
				}
			},
			{
				"config": {
					"priority": [
						"100"
					]
				},
				"id": "30502c4e-da35-4d66-a99e-f6ea3a93c76b",
				"name": "aes-generated",
				"providerId": "aes-generated",
				"subComponents": {
				}
			},
			{
				"config": {
					"keyUse": [
						"sig"
					],
					"priority": [
						"100"
					]
				},
				"id": "d44308d6-412b-4bda-8570-45d02cc8aa72",
				"name": "rsa-generated",
				"providerId": "rsa-generated",
				"subComponents": {
				}
			},
			{
				"config": {
					"algorithm": [
						"HS256"
					],
					"priority": [
						"100"
					]
				},
				"id": "d7bff37f-dafe-4345-8614-163ba3edac94",
				"name": "hmac-generated",
				"providerId": "hmac-generated",
				"subComponents": {
				}
			}
		],
		"org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
			{
				"config": {
					"allow-default-scopes": [
						"true"
					]
				},
				"id": "5724cbc5-0994-4e8e-873a-08f574c6a5ab",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subComponents": {
				},
				"subType": "authenticated"
			},
			{
				"config": {
				},
				"id": "b7cbff81-013a-41d3-9587-a5ab6b54e832",
				"name": "Full Scope Disabled",
				"providerId": "scope",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
					"max-clients": [
						"200"
					]
				},
				"id": "08bf3402-9624-4e3f-b38a-e845be972e7d",
				"name": "Max Clients Limit",
				"providerId": "max-clients",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
				},
				"id": "d0928bee-8126-4201-9a0b-0f5cb0161d59",
				"name": "Consent Required",
				"providerId": "consent-required",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
					"allowed-protocol-mapper-types": [
						"oidc-address-mapper",
						"oidc-full-name-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"saml-role-list-mapper",
						"saml-user-property-mapper",
						"oidc-usermodel-property-mapper",
						"saml-user-attribute-mapper"
					]
				},
				"id": "4eef5d18-25b7-43a2-9b43-e77d9f316f2c",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
					"client-uris-must-match": [
						"true"
					],
					"host-sending-registration-request-must-match": [
						"true"
					]
				},
				"id": "d08827fa-c8c0-4b24-ab9f-84222eb6bdac",
				"name": "Trusted Hosts",
				"providerId": "trusted-hosts",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
					"allow-default-scopes": [
						"true"
					]
				},
				"id": "001d1fa6-0d66-425f-a0df-dbe6c44d727e",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subComponents": {
				},
				"subType": "anonymous"
			},
			{
				"config": {
					"allowed-protocol-mapper-types": [
						"oidc-usermodel-attribute-mapper",
						"oidc-full-name-mapper",
						"oidc-usermodel-property-mapper",
						"oidc-address-mapper",
						"saml-role-list-mapper",
						"saml-user-property-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"saml-user-attribute-mapper"
					]
				},
				"id": "b416b406-13f5-409c-aa7f-378f81d6fa7b",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subComponents": {
				},
				"subType": "authenticated"
			}
		]
	},
	"defaultDefaultClientScopes": [
		"role_list",
		"profile",
		"email",
		"roles",
		"web-origins"
	],
	"defaultOptionalClientScopes": [
		"offline_access",
		"address",
		"phone",
		"microprofile-jwt"
	],
	"defaultRole": {
		"clientRole": false,
		"composite": true,
		"containerId": "master",
		"description": "${role_default-roles}",
		"id": "e7cc2857-c047-4cf6-a917-a6fbd4f6b693",
		"name": "default-roles-master"
	},
	"defaultSignatureAlgorithm": "RS256",
	"directGrantFlow": "direct grant",
	"displayName": "Keycloak",
	"displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
	"dockerAuthenticationFlow": "docker auth",
	"duplicateEmailsAllowed": false,
	"editUsernameAllowed": false,
	"enabled": true,
	"enabledEventTypes": [
	],
	"eventsEnabled": false,
	"eventsListeners": [
		"jboss-logging"
	],
	"failureFactor": 30,
	"groups": [
	],
	"id": "master",
	"identityProviderMappers": [
	],
	"identityProviders": [
	],
	"internationalizationEnabled": false,
	"keycloakVersion": "15.0.2",
	"loginWithEmailAllowed": true,
	"maxDeltaTimeSeconds": 43200,
	"maxFailureWaitSeconds": 900,
	"minimumQuickLoginWaitSeconds": 60,
	"notBefore": 0,
	"oauth2DeviceCodeLifespan": 600,
	"oauth2DevicePollingInterval": 600,
	"offlineSessionIdleTimeout": 2592000,
	"offlineSessionMaxLifespan": 5184000,
	"offlineSessionMaxLifespanEnabled": false,
	"otpPolicyAlgorithm": "HmacSHA1",
	"otpPolicyDigits": 6,
	"otpPolicyInitialCounter": 0,
	"otpPolicyLookAheadWindow": 1,
	"otpPolicyPeriod": 30,
	"otpPolicyType": "totp",
	"otpSupportedApplications": [
		"FreeOTP",
		"Google Authenticator"
	],
	"permanentLockout": false,
	"quickLoginCheckMilliSeconds": 1000,
	"realm": "master",
	"refreshTokenMaxReuse": 0,
	"registrationAllowed": false,
	"registrationEmailAsUsername": false,
	"registrationFlow": "registration",
	"rememberMe": false,
	"requiredActions": [
		{
			"alias": "CONFIGURE_TOTP",
			"config": {
			},
			"defaultAction": false,
			"enabled": true,
			"name": "Configure OTP",
			"priority": 10,
			"providerId": "CONFIGURE_TOTP"
		},
		{
			"alias": "terms_and_conditions",
			"config": {
			},
			"defaultAction": false,
			"enabled": false,
			"name": "Terms and Conditions",
			"priority": 20,
			"providerId": "terms_and_conditions"
		},
		{
			"alias": "UPDATE_PASSWORD",
			"config": {
			},
			"defaultAction": false,
			"enabled": true,
			"name": "Update Password",
			"priority": 30,
			"providerId": "UPDATE_PASSWORD"
		},
		{
			"alias": "UPDATE_PROFILE",
			"config": {
			},
			"defaultAction": false,
			"enabled": true,
			"name": "Update Profile",
			"priority": 40,
			"providerId": "UPDATE_PROFILE"
		},
		{
			"alias": "VERIFY_EMAIL",
			"config": {
			},
			"defaultAction": false,
			"enabled": true,
			"name": "Verify Email",
			"priority": 50,
			"providerId": "VERIFY_EMAIL"
		},
		{
			"alias": "delete_account",
			"config": {
			},
			"defaultAction": false,
			"enabled": false,
			"name": "Delete Account",
			"priority": 60,
			"providerId": "delete_account"
		},
		{
			"alias": "update_user_locale",
			"config": {
			},
			"defaultAction": false,
			"enabled": true,
			"name": "Update User Locale",
			"priority": 1000,
			"providerId": "update_user_locale"
		}
	],
	"requiredCredentials": [
		"password"
	],
	"resetCredentialsFlow": "reset credentials",
	"resetPasswordAllowed": false,
	"revokeRefreshToken": false,
	"roles": {
		"client": {
			"account": [
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_manage-account-links}",
					"id": "183782cf-6fff-4df0-a93e-37c65d2da521",
					"name": "manage-account-links"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": true,
					"composites": {
						"client": {
							"account": [
								"view-consent"
							]
						}
					},
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_manage-consent}",
					"id": "ebc4b930-f208-475e-b4cf-d8a41a08f582",
					"name": "manage-consent"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_view-consent}",
					"id": "7fb9b9ea-efa2-49e9-a88c-f6bf1da2fa73",
					"name": "view-consent"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_delete-account}",
					"id": "54f93146-87bc-41ee-97bc-c270e016d396",
					"name": "delete-account"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_view-applications}",
					"id": "2b766cff-2045-4edc-9b72-34b97283b619",
					"name": "view-applications"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": true,
					"composites": {
						"client": {
							"account": [
								"manage-account-links"
							]
						}
					},
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_manage-account}",
					"id": "664c779e-5e31-4f92-8a57-b410e0388ed0",
					"name": "manage-account"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "fe7aee58-10a7-4006-aae7-e4ebd449a62e",
					"description": "${role_view-profile}",
					"id": "5d9b2db8-ce5c-452d-af61-84d9463570b8",
					"name": "view-profile"
				}
			],
			"account-console": [
			],
			"admin-cli": [
			],
			"broker": [
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "89a96916-283a-468d-8f73-a2ab93b6e727",
					"description": "${role_read-token}",
					"id": "2d790e50-120e-4c69-a336-c41b8883e974",
					"name": "read-token"
				}
			],
			"liferay": [
			],
			"liferay-system-level": [
			],
			"master-realm": [
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-authorization}",
					"id": "cde3c28e-9bd0-4f1e-b156-c005218ba416",
					"name": "view-authorization"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-users}",
					"id": "431e1de9-2223-4cd2-9f89-e77ba2293573",
					"name": "manage-users"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-realm}",
					"id": "c1a463b5-009a-4a08-b30d-03d79a791578",
					"name": "view-realm"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-identity-providers}",
					"id": "c61ec426-dbe5-454c-8d23-d3aedc6c3927",
					"name": "view-identity-providers"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_impersonation}",
					"id": "018c2c02-3a23-45c8-90a4-058d2e28d050",
					"name": "impersonation"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_query-users}",
					"id": "20662a08-0119-404f-bb41-5bcf76db3e8a",
					"name": "query-users"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-events}",
					"id": "04bf60e7-60ef-4de8-9deb-4cfe030bd1ad",
					"name": "view-events"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_query-groups}",
					"id": "9d652e83-5f76-4bf9-8dc9-f1fbf8f8ef17",
					"name": "query-groups"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_query-clients}",
					"id": "dd578b50-4741-44c2-b628-d7b4d66a3e52",
					"name": "query-clients"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": true,
					"composites": {
						"client": {
							"master-realm": [
								"query-clients"
							]
						}
					},
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-clients}",
					"id": "886c9c9a-5aa7-4849-b53b-1994fc4eede3",
					"name": "view-clients"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-events}",
					"id": "5598d035-bc5a-4712-9fee-86df33260a0c",
					"name": "manage-events"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_query-realms}",
					"id": "24a5129a-3d28-4024-b3b2-c877cac3fd46",
					"name": "query-realms"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_create-client}",
					"id": "f7a46bd5-df11-4f06-bf96-254ab841f685",
					"name": "create-client"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-realm}",
					"id": "570be131-a8d0-4a0e-8762-1850854aeb77",
					"name": "manage-realm"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-clients}",
					"id": "8de91cf3-26d2-4c18-9f96-c6ebd8c3a4dc",
					"name": "manage-clients"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": true,
					"composites": {
						"client": {
							"master-realm": [
								"query-users",
								"query-groups"
							]
						}
					},
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_view-users}",
					"id": "f07d1f34-c7bc-4bf3-9c87-7f65c41a1ae2",
					"name": "view-users"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-authorization}",
					"id": "a099ff97-0624-4011-a31c-bf4856a6dbb2",
					"name": "manage-authorization"
				},
				{
					"attributes": {
					},
					"clientRole": true,
					"composite": false,
					"containerId": "a1661650-7fd3-4102-ba43-c55da68575e5",
					"description": "${role_manage-identity-providers}",
					"id": "7d128ded-fb14-4c78-a057-8e18a9df6d41",
					"name": "manage-identity-providers"
				}
			],
			"security-admin-console": [
			]
		},
		"realm": [
			{
				"attributes": {
				},
				"clientRole": false,
				"composite": false,
				"containerId": "master",
				"description": "${role_uma_authorization}",
				"id": "bfd319c7-6817-4d00-ab29-fa3bbfffadc5",
				"name": "uma_authorization"
			},
			{
				"attributes": {
				},
				"clientRole": false,
				"composite": true,
				"composites": {
					"client": {
						"master-realm": [
							"view-authorization",
							"manage-users",
							"view-realm",
							"view-identity-providers",
							"impersonation",
							"query-users",
							"view-events",
							"query-groups",
							"view-clients",
							"query-clients",
							"query-realms",
							"manage-events",
							"create-client",
							"manage-realm",
							"manage-clients",
							"view-users",
							"manage-authorization",
							"manage-identity-providers"
						]
					},
					"realm": [
						"create-realm"
					]
				},
				"containerId": "master",
				"description": "${role_admin}",
				"id": "f08e3e41-76ca-4262-87e4-ade6e01bfbb1",
				"name": "admin"
			},
			{
				"attributes": {
				},
				"clientRole": false,
				"composite": false,
				"containerId": "master",
				"description": "${role_create-realm}",
				"id": "c4e258b7-2615-4ff1-b59c-d8b61e317b27",
				"name": "create-realm"
			},
			{
				"attributes": {
				},
				"clientRole": false,
				"composite": false,
				"containerId": "master",
				"description": "${role_offline-access}",
				"id": "3806cb60-16ec-4c49-a594-620616d9b4c6",
				"name": "offline_access"
			},
			{
				"attributes": {
				},
				"clientRole": false,
				"composite": true,
				"composites": {
					"client": {
						"account": [
							"manage-account",
							"view-profile"
						]
					},
					"realm": [
						"offline_access",
						"uma_authorization"
					]
				},
				"containerId": "master",
				"description": "${role_default-roles}",
				"id": "e7cc2857-c047-4cf6-a917-a6fbd4f6b693",
				"name": "default-roles-master"
			}
		]
	},
	"scopeMappings": [
		{
			"clientScope": "offline_access",
			"roles": [
				"offline_access"
			]
		}
	],
	"smtpServer": {
	},
	"sslRequired": "external",
	"ssoSessionIdleTimeout": 1800,
	"ssoSessionIdleTimeoutRememberMe": 0,
	"ssoSessionMaxLifespan": 36000,
	"ssoSessionMaxLifespanRememberMe": 0,
	"supportedLocales": [
	],
	"userManagedAccessAllowed": false,
	"users": [
		{
			"createdTimestamp": 1634202926031,
			"credentials": [
				{
					"createdDate": 1634202926167,
					"credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}",
					"id": "732b7912-ecc5-450e-ad0f-a63fe082ad6b",
					"secretData": "{\"value\":\"6D81xQwUduCLeFnEFuhJSZg78caMHXDnmI+WMFTr7jmPOOT1yGLmp+bV2KWXlo2So404HAiVQlDabLC3GovJ9g==\",\"salt\":\"lkH/QdL/JZcnIF+Wv3IXew==\",\"additionalParameters\":{}}",
					"type": "password"
				}
			],
			"disableableCredentialTypes": [
			],
			"emailVerified": false,
			"enabled": true,
			"groups": [
			],
			"id": "4f129da2-cdbd-4037-8ce5-96e856bab148",
			"notBefore": 0,
			"realmRoles": [
				"admin",
				"default-roles-master"
			],
			"requiredActions": [
			],
			"totp": false,
			"username": "admin"
		},
		{
			"createdTimestamp": 1634203791895,
			"credentials": [
				{
					"createdDate": 1634203798881,
					"credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}",
					"id": "cd5ff0c4-9e15-40a7-b8e4-a7caee6e7826",
					"secretData": "{\"value\":\"lIdjS28DvDMzPwhJ6Byqj7uMZkwmgjSpNtzClCbZZptM6zLf6JR0cd/13/8r+sCaZOumQJky2ANTiTd1YurK+A==\",\"salt\":\"DBjAaHXglwuLdOmr/ZxQkg==\",\"additionalParameters\":{}}",
					"type": "password"
				}
			],
			"disableableCredentialTypes": [
			],
			"email": "tester1@liferay.com",
			"emailVerified": true,
			"enabled": true,
			"firstName": "First1",
			"groups": [
			],
			"id": "4517bde4-38d9-4357-ac79-3bdff12fda15",
			"lastName": "Last1",
			"notBefore": 0,
			"realmRoles": [
				"default-roles-master"
			],
			"requiredActions": [
			],
			"totp": false,
			"username": "user1"
		},
		{
			"createdTimestamp": 1634634709926,
			"credentials": [
				{
					"createdDate": 1634634716913,
					"credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}",
					"id": "06da082c-417d-41ab-8cfe-51c0b4a196d7",
					"secretData": "{\"value\":\"qYcf5px1dUsAiMzMwnJ3ql9yPKX4fDUlpfwzeKi0ffAnwCio+TY0mvHX5h3YZOe7Hx4/v9gIQVZMlBmqysrQaQ==\",\"salt\":\"3JPBkC2rUlpvZSzveKPW9g==\",\"additionalParameters\":{}}",
					"type": "password"
				}
			],
			"disableableCredentialTypes": [
			],
			"email": "tester2@liferay.com",
			"emailVerified": true,
			"enabled": true,
			"firstName": "First2",
			"groups": [
			],
			"id": "03b131b0-2c08-450b-95e6-d9a43d44491c",
			"lastName": "Last2",
			"notBefore": 0,
			"realmRoles": [
				"default-roles-master"
			],
			"requiredActions": [
			],
			"totp": false,
			"username": "user2"
		}
	],
	"verifyEmail": false,
	"waitIncrementSeconds": 60,
	"webAuthnPolicyAcceptableAaguids": [
	],
	"webAuthnPolicyAttestationConveyancePreference": "not specified",
	"webAuthnPolicyAuthenticatorAttachment": "not specified",
	"webAuthnPolicyAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyCreateTimeout": 0,
	"webAuthnPolicyPasswordlessAcceptableAaguids": [
	],
	"webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
	"webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
	"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyPasswordlessCreateTimeout": 0,
	"webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
	"webAuthnPolicyPasswordlessRpEntityName": "keycloak",
	"webAuthnPolicyPasswordlessRpId": "",
	"webAuthnPolicyPasswordlessSignatureAlgorithms": [
		"ES256"
	],
	"webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
	"webAuthnPolicyRequireResidentKey": "not specified",
	"webAuthnPolicyRpEntityName": "keycloak",
	"webAuthnPolicyRpId": "",
	"webAuthnPolicySignatureAlgorithms": [
		"ES256"
	],
	"webAuthnPolicyUserVerificationRequirement": "not specified"
}