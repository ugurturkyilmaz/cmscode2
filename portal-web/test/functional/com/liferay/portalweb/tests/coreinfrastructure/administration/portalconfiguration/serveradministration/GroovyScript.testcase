@component-name = "portal-server-administration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Server Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "3"
	test ExecuteScriptWithEmbeddedHTML {
		property test.name.skip.portal.instance = "GroovyScript#ExecuteScriptWithEmbeddedHTML";

		ServerAdministration.openServerAdmin();

		var script = '''
			out.println(
			"""
				<div class="embedded-html-test">
					Test Embedded HTML
				</div>
			""");
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		var outputContent = '''<div class="embedded-html-test"> Test Embedded HTML </div>''';

		AssertTextEquals.assertPartialText(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "${outputContent}");

		ServerAdministration.executeScript(
			htmlOutput = "true",
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "//div[@class='embedded-html-test']",
			value1 = "Test Embedded HTML");
	}

	@priority = "5"
	test ExecuteScriptWithLiferayClasses {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "GroovyScript#ExecuteScriptWithLiferayClasses";

		ServerAdministration.openServerAdmin();

		var script = '''
			import com.liferay.fragment.service.FragmentCollectionLocalServiceUtil;
			import com.liferay.counter.kernel.service.CounterLocalServiceUtil;

			fragmentCollectionId = CounterLocalServiceUtil.increment();

			fragmentCollection = FragmentCollectionLocalServiceUtil.createFragmentCollection(fragmentCollectionId);

			fragmentCollection.setName("Test Fragment Collection Name");

			out.println(fragmentCollection.getName());
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Test Fragment Collection Name");
	}

	@description = "This is a use case for LPS-102832. Check returns property value without leading spaces."
	@priority = "4"
	test ExecuteScriptWithPredefinedProperty {
		property custom.properties = "partnerstamm-api-user = his_user";
		property test.name.skip.portal.instance = "GroovyScript#ExecuteScriptWithPredefinedProperty";

		ServerAdministration.openServerAdmin();

		var script = '''
			import com.liferay.portal.util.PropsUtil;
			import com.liferay.portal.kernel.util.PropsUtil;
			import com.liferay.portal.kernel.configuration.Configuration;
			import com.liferay.portal.kernel.configuration.ConfigurationFactoryUtil;
			import com.liferay.portal.kernel.util.PortalClassLoaderUtil;

			println("com.liferay.portal.util.PropsUtil:" + com.liferay.portal.util.PropsUtil.get("partnerstamm-api-user"))

			println("com.liferay.portal.kernel.util.PropsUtil:" + com.liferay.portal.kernel.util.PropsUtil.get("partnerstamm-api-user"))

			Configuration configuration = ConfigurationFactoryUtil.getConfiguration(PortalClassLoaderUtil.getClassLoader(), "portal");
			println("ConfigurationFactoryUtil:" + configuration.get("partnerstamm-api-user"));
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "com.liferay.portal.util.PropsUtil:his_user com.liferay.portal.kernel.util.PropsUtil:his_user ConfigurationFactoryUtil:his_user");
	}

	@priority = "4"
	test ExecuteScriptWithPredefinedVariables {
		property test.name.skip.portal.instance = "GroovyScript#ExecuteScriptWithPredefinedVariables";

		ServerAdministration.openServerAdmin();

		var script = '''
			import com.liferay.portal.kernel.util.PortalUtil;

			company = PortalUtil.getCompany(actionRequest);

			out.println("Current company: ${company.getName()}");
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		var siteName = TestCase.getSiteName();

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Current company: ${siteName}");
	}

	@priority = "5"
	test ExecuteSimpleScript {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "GroovyScript#ExecuteSimpleScript";

		ServerAdministration.openServerAdmin();

		var script = '''
			out.println("Test groovy script");
		''';

		ServerAdministration.executeScript(
			language = "Groovy",
			script = "${script}");

		AssertTextEquals(
			locator1 = "ServerAdministrationScript#OUTPUT_FIELD",
			value1 = "Test groovy script");
	}

}