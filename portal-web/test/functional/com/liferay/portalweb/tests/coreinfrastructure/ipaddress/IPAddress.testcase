@component-name = "portal-ip-address"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "IP Address";

	setUp {
		TestCase.setUpPortalInstance();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@ignore = "true"
	@priority = "5"
	test RunPortalOnIPV6 {
		property custom.properties = "redirect.url.ips.allowed=127.0.0.1,SERVER_IP,0:0:0:0:0:0:0:1${line.separator}tunnel.servlet.hosts.allowed=[0:0:0:0:0:0:0:1]";
		property portal.acceptance = "false";
		property testcase.url = "http://[0:0:0:0:0:0:0:1]:8080";

		AssertLocation(value1 = "http://[::1]:8080/web/guest");

		User.firstLoginPG();

		AssertLocation(value1 = "http://[::1]:8080/web/guest/home");

		// AUI-3161

		//Smoke.runSmoke();

		User.logoutPG();

		AssertLocation(value1 = "http://[::1]:8080/web/guest/home");
	}

}