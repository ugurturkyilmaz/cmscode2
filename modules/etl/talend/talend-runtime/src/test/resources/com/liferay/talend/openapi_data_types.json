{
	"components": {
		"schemas": {
			"BigDecimal": {
				"properties": {
					"bigDecimal1": {
						"format": "bigdecimal",
						"type": "number"
					},
					"bigDecimal2": {
						"format": "bigdecimal",
						"type": "number"
					},
					"double": {
						"format": "double",
						"type": "number"
					},
					"float": {
						"format": "float",
						"type": "number"
					},
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"number": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"bigDecimal1",
					"bigDecimal2"
				],
				"type": "object",
				"xml": {
					"name": "BigDecimal"
				}
			},
			"Branch": {
				"properties": {
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"parentBranch": {
						"$ref": "#/components/schemas/Branch",
						"description": "Example of property that refers to host schema that would allow only one level of object nesting"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"xml": {
					"name": "LocalizedInvalid2"
				}
			},
			"Localized1": {
				"properties": {
					"description": {
						"type": "string"
					},
					"description_i18n": {
						"additionalProperties": {
							"type": "string"
						},
						"description": "Example of property name which is approved by Liferay and conversion to Avro indexed record is supported",
						"type": "object"
					},
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"xml": {
					"name": "Localized"
				}
			},
			"Localized2": {
				"properties": {
					"description": {
						"type": "string"
					},
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"nestedI18n": {
						"$ref": "#/components/schemas/Localized1",
						"description": "Example of property which nests object with i18n property and conversion to Avro indexed record is supported"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"xml": {
					"name": "Localized"
				}
			},
			"LocalizedInvalid1": {
				"properties": {
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"property_i18n_suffix": {
						"additionalProperties": {
							"type": "string"
						},
						"description": "Example of property name which would break conversion to Avro indexed record",
						"type": "object"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"xml": {
					"name": "LocalizedInvalid1"
				}
			},
			"LocalizedInvalid2": {
				"properties": {
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"property_i18n": {
						"$ref": "#/components/schemas/Localized1",
						"description": "Example of property with valid _i18n usage and wrong type that would break conversion to Avro indexed record"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"xml": {
					"name": "LocalizedInvalid2"
				}
			},
			"Timestamp": {
				"properties": {
					"id": {
						"format": "int64",
						"readOnly": true,
						"type": "integer"
					},
					"timestamp1": {
						"format": "date-time",
						"type": "string"
					},
					"timestamp2": {
						"format": "date-time",
						"type": "string"
					},
					"timestamp3": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"timestamp1",
					"timestamp2"
				],
				"type": "object",
				"xml": {
					"name": "Price"
				}
			}
		}
	},
	"info": {
		"description": "Liferay Commerce Admin Catalog Test API",
		"title": "Liferay Commerce Admin Catalog Test API",
		"version": "v1.0"
	},
	"openapi": "3.0.1",
	"paths": {
		"/v1.0/bigdecimal/{id}": {
			"delete": {
				"operationId": "deleteBigDecimal",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
							},
							"application/xml": {
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Price"
				]
			},
			"get": {
				"operationId": "getBigDecimal",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BigDecimal"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/BigDecimal"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Price"
				]
			},
			"patch": {
				"operationId": "patchBigDecimal",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BigDecimal"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/BigDecimal"
							}
						}
					}
				},
				"responses": {
					"default": {
						"content": {
							"application/json": {
							},
							"application/xml": {
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"BigDecimal"
				]
			}
		},
		"/v1.0/branch": {
			"post": {
				"operationId": "addBranch",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Branch"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Branch"
							}
						}
					}
				},
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Branch"
								}
							}
						},
						"description": "created branch"
					}
				},
				"tags": [
					"Nested"
				]
			}
		},
		"/v1.0/i18n/{id}": {
			"get": {
				"operationId": "getLocalized",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Localized1"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Localized1"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Localized"
				]
			}
		},
		"/v1.0/i18n_invalid_1/{id}": {
			"get": {
				"operationId": "getLocalized",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalizedInvalid1"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/LocalizedInvalid1"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Localized",
					"Invalid"
				]
			}
		},
		"/v1.0/i18n_invalid_2/{id}": {
			"get": {
				"operationId": "getLocalizedInvalid2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalizedInvalid2"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/LocalizedInvalid2"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Localized",
					"Invalid"
				]
			}
		},
		"/v1.0/i18n_nested": {
			"get": {
				"operationId": "getNested",
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Localized2"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Localized",
					"Nested"
				]
			}
		},
		"/v1.0/timestamp/{code}": {
			"get": {
				"operationId": "getTimestamp",
				"parameters": [
					{
						"in": "path",
						"name": "code",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"default": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Timestamp"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Timestamp"
								}
							}
						},
						"description": "default response"
					}
				},
				"tags": [
					"Timestamp"
				]
			},
			"patch": {
				"operationId": "setTimestamp",
				"parameters": [
					{
						"in": "path",
						"name": "code",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Timestamp"
							}
						},
						"application/xml": {
							"schema": {
								"$ref": "#/components/schemas/Timestamp"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "Updated"
					}
				},
				"tags": [
					"Timestamp"
				]
			}
		}
	}
}