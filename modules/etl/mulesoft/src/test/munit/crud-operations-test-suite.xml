<?xml version="1.0"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:liferay="http://www.mulesoft.org/schema/mule/liferay" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xsi:schemaLocation="   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd   http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd   http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd   http://www.mulesoft.org/schema/mule/liferay http://www.mulesoft.org/schema/mule/liferay/current/mule-liferay.xsd   http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="crud-operations-test-suite.xml" />
	<configuration-properties file="automation-credentials.properties" />
	<liferay:config name="Liferay_Config_2">
		<liferay:basic-connection openApiSpecPath="${liferay.openApiSpecPath}" username="${liferay.username}" password="${liferay.password}" />
	</liferay:config>
	<file:config name="File_Config_2">
		<file:connection workingDir="${app.home}" />
	</file:config>
	<munit:before-test name="before-CRUD-test">
		<file:read config-ref="File_Config_2" path="products.json" />
		<ee:transform>
			<ee:message>
				<ee:set-payload>
					<![CDATA[
						%dw 2.0
						import * from dw::util::Values
						output application/json
						---
						payload update "catalogId" with p("liferay.catalogId")
					]]>
				</ee:set-payload>
			</ee:message>
		</ee:transform>
		<liferay:execute-import-create-task className="com.liferay.headless.commerce.admin.catalog.dto.v1_0.Product" config-ref="Liferay_Config_2" />
	</munit:before-test>
	<munit:test name="get-operation-test" description="Get Products">
		<munit:execution>
			<liferay:get endpoint="/v1.0/products" config-ref="Liferay_Config_2">
				<liferay:path-params/>
				<liferay:query-params>
					<liferay:query-param key="pageSize" value="100" />
				</liferay:query-params>
			</liferay:get>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert>
				<munit-tools:that>
					<![CDATA[#[
						import * from dw::test::Asserts
 						---
						payload must [notBeNull(), payload.pageSize==100, payload.totalCount==80]
					]]]>
				</munit-tools:that>
			</munit-tools:assert>
			<foreach collection="#[payload.items]">
				<munit-tools:assert>
					<munit-tools:that>
						<![CDATA[#[
							import * from dw::test::Asserts
 							---
							payload must [haveKey("active"), haveKey("catalogId"), haveKey("name"), haveKey("productType")]
						]]]>
					</munit-tools:that>
				</munit-tools:assert>
			</foreach>
		</munit:validation>
	</munit:test>
	<munit:test name="delete-operation-test" description="Delete Products">
		<munit:execution>
			<liferay:get endpoint="/v1.0/products" config-ref="Liferay_Config_2">
				<liferay:query-params>
					<liferay:query-param key="pageSize" value="100" />
				</liferay:query-params>
			</liferay:get>
			<foreach collection="#[payload.items]">
				<liferay:delete config-ref="Liferay_Config_2" endpoint="/v1.0/products/{id}">
					<liferay:path-params>
						<liferay:path-param key="id" value="#[payload.productId]" />
					</liferay:path-params>
				</liferay:delete>
			</foreach>
			<liferay:get endpoint="/v1.0/products" config-ref="Liferay_Config_2" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert>
				<munit-tools:that>
					<![CDATA[#[
						import * from dw::test::Asserts
 						---
						payload must [notBeNull(), payload.totalCount == 0]
					]]]>
				</munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="create-operation-test" description="Create Product">
		<munit:execution>
			<liferay:get endpoint="/v1.0/products" config-ref="Liferay_Config_2" />
			<liferay:post config-ref="Liferay_Config_2" endpoint="/v1.0/products">
				<liferay:input-stream>
					<![CDATA[#[
						{
							active: true,
							catalogId: payload.items[0].catalogId,
							description: {en_US:"My new product description"},
							name: {en_US:"My New Product"},
							productType: "simple"
						}
					]]]>
				</liferay:input-stream>
			</liferay:post>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert>
				<munit-tools:that>
					<![CDATA[#[
						import * from dw::test::Asserts
						 ---
						payload must [notBeNull(), payload.name.en_US == "My New Product", payload.description.en_US =="My new product description"]
					]]]>
				</munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="update-operation-test" description="Update Product">
		<munit:execution>
			<liferay:get endpoint="/v1.0/products" config-ref="Liferay_Config_2" />
			<set-variable value="#[payload.items[0].productId]" variableName="updatedProductId" />
			<liferay:patch config-ref="Liferay_Config_2" endpoint="/v1.0/products/{id}">
				<liferay:input-stream>
					<![CDATA[#[
						{
							active: true,
							catalogId: payload.items[0].catalogId,
							description: {en_US:"My updated product description"},
							name: {en_US:"My Updated Product"},
							productType: "simple"
						}
					]]]>
				</liferay:input-stream>
				<liferay:path-params>
					<liferay:path-param key="id" value="#[payload.items[0].productId]" />
				</liferay:path-params>
			</liferay:patch>
			<liferay:get config-ref="Liferay_Config_2" endpoint="/v1.0/products/{id}">
				<liferay:path-params>
					<liferay:path-param key="id" value="#[vars.updatedProductId]" />
				</liferay:path-params>
			</liferay:get>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert>
				<munit-tools:that>
					<![CDATA[#[
						import * from dw::test::Asserts
						 ---
						payload must [notBeNull(), payload.name.en_US == "My Updated Product", payload.description.en_US =="My updated product description"]
					]]]>
				</munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:after-test name="after-CRUD-test">
		<liferay:execute-export-task config-ref="Liferay_Config_2" className="com.liferay.headless.commerce.admin.catalog.dto.v1_0.Product" siteId="${liferay.siteId}" fieldNames="active,catalogId,name,productId,productType" />
		<liferay:execute-import-delete-task className="com.liferay.headless.commerce.admin.catalog.dto.v1_0.Product" config-ref="Liferay_Config_2" />
	</munit:after-test>
</mule>