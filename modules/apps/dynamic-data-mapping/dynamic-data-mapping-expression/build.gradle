import com.liferay.gradle.util.FileUtil

import org.apache.tools.ant.filters.FixCrLfFilter

apply plugin: 'antlr'

String parserDirName = "com/liferay/dynamic/data/mapping/expression/internal/parser"
List<String> startParameterTaskNames = gradle.startParameter.taskNames

dependencies {
	annotationProcessor group: "org.antlr", name: "antlr4-annotations", version: "4.3"

	antlr group: "org.antlr", name: "antlr4", version: "4.3"

	compileInclude group: "org.abego.treelayout", name: "org.abego.treelayout.core", version: "1.0.1"
	compileInclude group: "org.antlr", name: "antlr4-runtime", version: "4.3"

	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "org.antlr", name: "antlr4", version: "4.3"
	compileOnly group: "org.antlr", name: "antlr4-annotations", version: "4.3"
	compileOnly group: "org.osgi", name: "org.osgi.service.component", version: "1.4.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.4.0"
	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"
	compileOnly project(":apps:dynamic-data-mapping:dynamic-data-mapping-api")
	compileOnly project(":core:osgi-service-tracker-collections")
	compileOnly project(":core:petra:petra-string")

	testCompile project(":core:petra:petra-lang")
}

generateGrammarSource {
	setActions([])

	File grammarFile = file("src/main/antlr/${parserDirName}/DDMExpression.g4")

	dependsOn cleanGenerateGrammarSource

	doFirst {
		delete fileTree("src/main/java/" + parserDirName) {
			exclude "**/source_formatter.ignore"
		}

		delete fileTree("src/main/resources/" + parserDirName) {
			exclude "**/source_formatter.ignore"
		}

		javaexec {
			args "-o", FileUtil.relativize(generateGrammarSource.outputDirectory, grammarFile.parentFile)
			args grammarFile.name
			args "-visitor"

			classpath = generateGrammarSource.antlrClasspath
			main = "org.antlr.v4.Tool"
			maxHeapSize = generateGrammarSource.maxHeapSize
			workingDir = grammarFile.parentFile
		}
	}

	doLast {
		copy {
			filter(FixCrLfFilter, javafiles: true, tab: FixCrLfFilter.AddAsisRemove.newInstance("add"))

			from outputDirectory
			include "**/*.java"
			into "src/main/java/" + parserDirName
		}

		copy {
			from outputDirectory
			exclude "**/*.java"
			into "src/main/resources/" + parserDirName
		}
	}

	ext {
		autoClean = false
	}

	enabled = startParameterTaskNames.contains("generateGrammarSource")
	maxHeapSize = "1512m"
	outputDirectory = new File(temporaryDir, "generated")
}

liferayOSGi {
	expandCompileInclude = true
}