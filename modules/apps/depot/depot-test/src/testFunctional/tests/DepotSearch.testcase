@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Bar");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Site Name",
			layoutName = "Page Name",
			widgetName = "Search Results");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			Site.tearDownCP();

			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that a depot document cannot be searched from the disconnected site."
	@priority = "5"
	@refactordone
	test CanNotSearchForDocumentFromDisconnectedSite {
		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM Document Title");
	}

	@description = "This ensures that a depot web content can be searched on a connected site when searching is reenabled."
	@priority = "5"
	@refactordone
	test CanReenableSearchability {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Depot Name",
			site = "false",
			title = "WC WebContent Title");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Searchable",
			siteList = "Site Name",
			tableEntryText = "Yes");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "WC WebContent Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "WC WebContent Title");
	}

	@description = "This ensures that users can search for depot document from connected site."
	@priority = "5"
	@refactordone
	test CanSearchForDocument {
		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "DM Document Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "DM Document Title");
	}

	@description = "This ensures that a depot document associated with a tag can be searched from the connected site."
	@priority = "5"
	@refactordone
	test CanSearchForTag {
		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "depot",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_4.jpg");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "depot");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "DM Document Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "DM Document Title");
	}

	@description = "This ensures that a depot content associated with the user can be searched with from the connected site."
	@priority = "5"
	@refactordone
	test CanSearchForUser {
		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Depot Name",
			site = "false",
			title = "WC WebContent Title");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "TEST TEST");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");
	}

	@description = "This ensures that a depot web content can be searched from the connected site."
	@priority = "5"
	@refactordone
	test CanSearchForWC {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Depot Name",
			site = "false",
			title = "WC WebContent Title");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "WC WebContent Title",
			searchAssetType = "Web Content Article");

		SearchPortlets.gotoResultDetails(searchAssetTitle = "WC WebContent Title");

		SearchPortlets.viewResultDetails(searchAssetTitle = "WC WebContent Title");
	}

	@description = "This ensures that a depot document cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	@refactordone
	test DocumentCanNotBeSearchedWhenDisabled {
		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "DM Document Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM Document Title");
	}

	@description = "This ensures that a depot document associated with a tag cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	@refactordone
	test TagCanNotBeSearchedWhenDisabled {
		JSONDocument.addFileWithUploadedFile(
			assetTagNames = "depot",
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.doc",
			groupName = "Test Depot Name",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "depot");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "depot");
	}

	@description = "This ensures that a depot content associated with the user cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	@refactordone
	test UserCanNotBeSearchedWhenDisabled {
		JSONDocument.addFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Test Depot Name");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Depot Name",
			site = "false",
			title = "WC WebContent Title");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "TEST TEST");

		AssertElementNotPresent(
			key_searchAssetTitle = "DM Document Title",
			key_searchAssetType = "Document",
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE_SPECIFIC");

		AssertElementNotPresent(
			key_searchAssetTitle = "WC WebContent Title",
			key_searchAssetType = "Web Content Article",
			locator1 = "SearchResults#ASSET_ENTRY_TABLE_TITLE_SPECIFIC");
	}

	@description = "This ensures that a depot web content cannot be searched on a connected site when searching is disabled."
	@priority = "5"
	@refactordone
	test WCCanNotBeSearchedWhenDisabled {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Depot Name",
			site = "false",
			title = "WC WebContent Title");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		DepotNavigator.openDepotAdmin();

		Depot.configureSearch(
			depotName = "Test Depot Name",
			item = "Make Unsearchable",
			siteList = "Site Name",
			tableEntryText = "No");

		Navigator.openSitePage(
			pageName = "Page Name",
			siteName = "Site Name");

		Search.searchCP(searchTerm = "WC WebContent Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "WC WebContent Title");
	}

}