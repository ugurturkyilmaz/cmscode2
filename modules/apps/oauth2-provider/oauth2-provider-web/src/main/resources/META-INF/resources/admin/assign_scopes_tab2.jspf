<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<div aria-orientation="vertical" class="panel-group" id="<portlet:namespace />globalAccordion" role="tablist">

	<%
	Map<AssignableScopes, AssignScopesDisplayContext.Relations> globalAssignableScopesRelations = assignScopesDisplayContext.getGlobalAssignableScopesRelations();

	for (Map.Entry<AssignableScopes, AssignScopesDisplayContext.Relations> scopeAliasAssignableScopesEntry : globalAssignableScopesRelations.entrySet()) {
		AssignScopesDisplayContext.Relations relations = scopeAliasAssignableScopesEntry.getValue();

		Set<String> assignedScopeAliases = relations.getAssignedScopeAliases();

		Set<String> scopeAliases = relations.getScopeAliases();

		Set<String> relatedScopeAliases = new HashSet<>(scopeAliases);

		relatedScopeAliases.addAll(assignedScopeAliases);

		List<String> relatedScopeAliasesList = new ArrayList<>(relatedScopeAliases);

		Collections.sort(relatedScopeAliasesList);

		Iterator<String> iterator = relatedScopeAliasesList.iterator();

		StringBundler sb = new StringBundler((scopeAliases.size() * 2) - 1);

		while (iterator.hasNext()) {
			String scopeAlias = iterator.next();

			if (!scopeAliases.contains(scopeAlias)) {
				sb.append("<span class=\"removed-scope\">");
				sb.append(LanguageUtil.get(request, scopeAlias));
				sb.append("</span>");
			}
			else {
				sb.append(LanguageUtil.get(request, scopeAlias));
			}

			if (iterator.hasNext()) {
				sb.append(" / ");
			}
		}

		String id = StringUtil.randomId();
		String scopeAliasesString = StringUtil.merge(scopeAliases, StringPool.SPACE);
	%>

		<div class="panel panel-secondary<c:if test="<%= scopeAliases.size() == 0 %>"> removed-scope</c:if>" data-master="<%= scopeAliasesString %>" id="<portlet:namespace /><%= id %>">
			<div class="collapse-icon panel-header panel-header-link" id="<portlet:namespace />globalAccordionHeading<%= id %>">
				<div class="inline">
					<aui:input checked="<%= !assignedScopeAliases.isEmpty() %>" id='<%= "scopeAlias" + id %>' label="<%= sb.toString() %>" name="scopeAliases" onChange='<%= liferayPortletResponse.getNamespace() + "recalculateDependants(this)" %>' type="checkbox" value="<%= scopeAliasesString %>" />
				</div>

				<a aria-controls="<portlet:namespace />globalAccordion<%= id %>" aria-expanded="false" class="collapsed" data-toggle="liferay-collapse" href="#<portlet:namespace />globalAccordion<%= id %>" role="tab">
					<span>(<liferay-ui:message key="details" />)</span>

					<span class="collapse-icon-closed">
						<clay:icon
							symbol="angle-right"
						/>
					</span>
					<span class="collapse-icon-open">
						<clay:icon
							symbol="angle-down"
						/>
					</span>
				</a>
			</div>

			<div aria-labelledby="<portlet:namespace />globalAccordionHeading<%= id %>" class="collapse panel-collapse" id="<portlet:namespace />globalAccordion<%= id %>" role="tabpanel">
				<div class="panel-body">

					<%
					AssignableScopes assignableScopes = scopeAliasAssignableScopesEntry.getKey();
					AssignableScopes assignedAssignableScopes = relations.getAssignedAssignableScopes();

					AssignableScopes newAssignableScopes = null;
					AssignableScopes removedAssignableScopes = null;
					AssignableScopes unchangedAssignableScopes = null;

					if (assignedAssignableScopes != null) {
						newAssignableScopes = assignableScopes.subtract(assignedAssignableScopes);
						removedAssignableScopes = assignedAssignableScopes.subtract(assignableScopes);

						AssignableScopes subtractAssignableScopes = assignableScopes.subtract(newAssignableScopes);

						unchangedAssignableScopes = subtractAssignableScopes.subtract(removedAssignableScopes);

						assignableScopes = assignableScopes.add(assignedAssignableScopes);
					}

					for (String applicationName : assignableScopes.getApplicationNames()) {
					%>

						<ul class="list-group">
							<li class="list-group-item list-group-item-flex">
								<div class="autofit-col">
									<clay:icon
										symbol="search"
									/>
								</div>

								<div class="autofit-col autofit-col-expand">
									<h4 class="list-group-title text-truncate"><%= HtmlUtil.escape(assignScopesDisplayContext.getApplicationDescription(applicationName)) %></h4>

									<p class="list-group-subtitle text-truncate">
										<c:choose>
											<c:when test="<%= assignedAssignableScopes == null %>">
												<%= assignScopesDisplayContext.getApplicationScopeDescription(applicationName, assignableScopes, "<br />+ ") %>
											</c:when>
											<c:otherwise>

												<%
												String applicationScopeDescription = assignScopesDisplayContext.getApplicationScopeDescription(applicationName, unchangedAssignableScopes, "<br />+ ");
												%>

												<div>
													<%= applicationScopeDescription %>
												</div>

												<%
												boolean firstLine = applicationScopeDescription.length() == 0;
												applicationScopeDescription = assignScopesDisplayContext.getApplicationScopeDescription(applicationName, removedAssignableScopes, "<br />+ ");
												%>

												<c:if test="<%= applicationScopeDescription.length() > 0 %>">
													<div class="removed-scope">
														<c:if test="<%= !firstLine %>">+ </c:if>

														<%
														firstLine = firstLine && (applicationScopeDescription.length() == 0);
														%>

														<%= applicationScopeDescription %>
													</div>
												</c:if>

												<%
												applicationScopeDescription = assignScopesDisplayContext.getApplicationScopeDescription(applicationName, newAssignableScopes, "<br />+ ");
												%>

												<c:if test="<%= applicationScopeDescription.length() > 0 %>">
													<div class="added-scope">
														<c:if test="<%= !firstLine %>">+ </c:if>
														<%= applicationScopeDescription %>
													</div>
												</c:if>
											</c:otherwise>
										</c:choose>
									</p>
								</div>
							</li>
						</ul>

					<%
					}
					%>

				</div>
			</div>
		</div>

	<%
	}
	%>

</div>