definition {

	macro closeFrame {
		SelectFrame(value1 = "relative=top");

		Click.mouseDownMouseUp(locator1 = "Modal#CLOSE_BUTTON");
	}

	macro exportAndDownloadACalendarFile {
		var calendarSelected = selenium.getText("CalendarExportImport#CALENDAR_TO_BE_EXPORTED");

		CalendarExportImport.exportCalendarFile();

		AssertClick.assertPartialTextClickAt(
			locator1 = "CalendarExportImport#EXPORTED_CALENDAR_FILE_NAME",
			value1 = "${calendarSelected}");
	}

	macro exportCalendarFile {
		Button.click(button = "Export");
	}

	macro gotoExportTab {
		if (isSet(subTab)) {
			Navigator.gotoNavTab(navTab = "Export");

			Navigator.gotoNavTab(navTab = "${subTab}");
		}
		else {
			Navigator.gotoNavTab(navTab = "Export");
		}
	}

	macro gotoImportTab {
		if (isSet(subTab)) {
			Navigator.gotoNavTab(navTab = "Import");

			Navigator.gotoNavTab(navTab = "${subTab}");
		}
		else {
			Navigator.gotoNavTab(navTab = "Import");
		}
	}

	macro gotoPortletExportImport {
		Portlet.gotoPortletOptions(
			portletName = "Calendar",
			portletOption = "Export / Import");
	}

	macro importCalendarFile {
		UploadDependencyFile.uploadArchiveFile(fileName = "${calendarFile}");

		if (isSet(importValidationErrorMessage)) {
			AssertTextEquals.assertPartialText(
				importValidationErrorMessage = "${importValidationErrorMessage}",
				locator1 = "ExportImport#VALIDATION_ERROR_MESSAGE_HEADER",
				value1 = "${importValidationErrorMessage}");
		}
		else {
			Button.click(button = "Continue");

			Button.click(button = "Import");
		}
	}

	macro removeWidgetCalendar {
		Portlet.gotoPortletOptions(portletName = "Calendar");

		MenuItem.clickNoError(menuItem = "Remove");

		AssertConfirm(value1 = "Are you sure you want to remove this component?");
	}

	macro selectConfigurationIFrame {
		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro viewExportedCalendarFileName {
		var calendarSelected = selenium.getText("CalendarExportImport#CALENDAR_TO_BE_EXPORTED");

		CalendarExportImport.gotoExportTab(subTab = "Current and Previous");

		AssertTextEquals.assertPartialText(
			locator1 = "CalendarExportImport#EXPORTED_CALENDAR_FILE_NAME",
			value1 = "${calendarSelected}");
	}

	macro viewNoProcessesOnCurrentAndPreviousTab {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "processes were found.");
	}

	macro viewSuccessStatusOnCurrentAndPreviousTab {
		AssertTextEquals(
			key_larFileName = "Successful",
			locator1 = "ExportImport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "${key_larFileName}");
	}

}