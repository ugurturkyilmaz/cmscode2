definition {

	macro _selectSpecificEventCurrentDay {
		var key_eventTitle = "${eventTitle}";

		ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_REGULAR_EVENT_SPECIFIC_CURRENT_DAY_VIA_DAY_OR_WEEK_VIEW");

		Refresh();

		AssertClick.assertPartialTextClickAt(
			locator1 = "Calendar#SCHEDULER_REGULAR_EVENT_SPECIFIC_CURRENT_DAY_VIA_DAY_OR_WEEK_VIEW",
			value1 = "${eventTitle}");
	}

	macro _viewCalendarViaDialogBox {
		if ("${schedulerEventDialogBox}" == "false") {
			AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR");
		}
		else {
			AssertSelectedLabel(
				locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR",
				value1 = "${calendarName}");
		}
	}

	macro _viewRegularEventTitleViaMonthView {
		CalendarNavigator.gotoView(viewType = "Month");

		var key_endDate = "${endDate}";
		var key_endDateTime = "${endDateTime}";
		var key_eventTitle = "${eventTitle}";
		var key_startDate = "${startDate}";
		var key_startDateTime = "${startDateTime}";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_REGULAR");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_REGULAR_TITLE_ELEMENT_VIA_MONTH");
	}

	macro addEventToday {
		CalendarNavigator.gotoAddEventToday(
			viewType = "${viewType}",
			viewTypeUppercase = "${viewTypeUppercase}");

		CalendarScheduler.editTitle(eventTitle = "${eventTitle}");

		CalendarScheduler.saveEvent();

		Alert.viewSuccessMessage();
	}

	macro addLocalizedEvent {
		CalendarNavigator.gotoAddEventToday(
			viewType = "${viewType}",
			viewTypeUppercase = "${viewTypeUppercase}");

		CalendarScheduler.editTitle(eventTitle = "${eventTitle}");

		var key_saveButton = "${saveButton}";

		AssertClick(
			locator1 = "Button#SAVE_LOCALIZED",
			value1 = "${saveButton}");

		Alert.viewSuccessMessage();
	}

	macro changeCalendar {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEventNoRefresh(eventTitle = "${eventTitle}");

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EVENT_TITLE",
			value1 = "${eventTitle}");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR");

		Select(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR",
			value1 = "${calendarName}");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR");

		CalendarScheduler.saveEvent();

		if (IsElementPresent(locator1 = "CalendarEditEvent#RECURRING_EVENT_DIALOG_BOX_HEADER")) {
			AssertClick(
				locator1 = "CalendarEditEvent#ENTIRE_SERIES_BUTTON",
				value1 = "Entire Series");
		}

		CalendarScheduler.selectSpecificEventNoRefresh(eventTitle = "${eventTitle}");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR");
	}

	macro editTitle {
		Type(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EVENT_TITLE",
			value1 = "${eventTitle}");
	}

	macro editTitleAndCalendar {
		CalendarScheduler.selectSpecificEvent(eventTitle = "${currentEventTitle}");

		CalendarScheduler.editTitle(eventTitle = "${eventTitle}");

		Select(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_CALENDAR",
			value1 = "${calendarName}");

		CalendarScheduler.saveEvent();
	}

	macro gotoAddViaDayView {
		Click(locator1 = "CalendarDayView#SCHEDULER_VIEW_DAY");
	}

	macro gotoDetailsViaDialogBox {
		AssertClick(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_VIEW_DETAILS_BUTTON",
			value1 = "View Details");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");
	}

	macro gotoEdit {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEvent(eventTitle = "${eventTitle}");

		AssertClick(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EDIT_BUTTON",
			value1 = "Edit");

		SelectFrame(locator1 = "IFrame#METADATA_SETS_IFRAME");
	}

	macro gotoEditSpecific {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEvent(eventTitle = "${eventTitle}");

		AssertClick(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EDIT_BUTTON",
			value1 = "Edit");

		SelectFrame(locator1 = "IFrame#METADATA_SETS_IFRAME");
	}

	macro gotoEditViaDialogBox {
		AssertClick(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EDIT_BUTTON",
			value1 = "Edit");

		SelectFrame(locator1 = "IFrame#METADATA_SETS_IFRAME");
	}

	macro saveEvent {
		AssertClick(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_SAVE_BUTTON",
			value1 = "Save");
	}

	macro saveRepeatingEvent {
		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		AssertElementPresent(locator1 = "CalendarEditEvent#RECURRING_EVENT_DIALOG_BOX_HEADER");

		var saveOptionPath = StringUtil.replace("${saveOption}", " ", "_");
		var saveOptionPath = StringUtil.upperCase("${saveOptionPath}");

		AssertClick(
			locator1 = "CalendarEditEvent#${saveOptionPath}_BUTTON",
			value1 = "${saveOption}");

		Alert.viewSuccessMessage();
	}

	macro selectSpecificEvent {
		var key_eventTitle = "${eventTitle}";

		Refresh();

		if (contains("${eventTitle}", "All Day")) {
			AssertClick.assertPartialTextClickAtNoMouseOver(
				locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_ALL_DAY",
				value1 = "${eventTitle}");
		}
		else if (IsElementNotPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW")) {
			if (!(IsElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY"))) {
				Click(locator1 = "Calendar#VIEW_PREVIOUS_BUTTON");
			}

			ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY");

			AssertClick.assertPartialTextClickAtNoMouseOver(
				locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY",
				value1 = "${eventTitle}");
		}
		else {
			ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW");

			Refresh();

			AssertClick.assertPartialTextClickAt(
				locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW",
				value1 = "${eventTitle}");
		}
	}

	macro selectSpecificEventNoRefresh {
		var key_eventTitle = "${eventTitle}";

		if (contains("${eventTitle}", "All Day")) {
			AssertClick.assertPartialTextClickAtNoMouseOver(
				locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_ALL_DAY",
				value1 = "${eventTitle}");
		}
		else if (IsElementNotPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW")) {
			if (!(IsElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY"))) {
				Click(locator1 = "Calendar#VIEW_NEXT_BUTTON");
			}

			ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY");

			AssertClick.assertPartialTextClickAtNoMouseOver(
				locator1 = "Calendar#SCHEDULER_VIEW_EVENT_NOT_TODAY",
				value1 = "${eventTitle}");
		}
		else {
			ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW");

			AssertClick.assertPartialTextClickAtNoMouseOver(
				locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW",
				value1 = "${eventTitle}");
		}
	}

	macro viewAgenda {
		CalendarNavigator.gotoView(viewType = "Agenda");

		var key_eventTitle = "${eventTitle}";

		if (IsElementNotPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_FIRST_EVENT_AGENDA_VIEW")) {
			Click(locator1 = "Calendar#VIEW_PREVIOUS_BUTTON");
		}

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_FIRST_EVENT_AGENDA_VIEW");

		if ("${numberOfOccurrences}" == "2") {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_LAST_EVENT_AGENDA_VIEW");
		}

		AssertTextNotPresent(
			locator1 = "CalendarAgendaView#EMPTY_MESSAGE",
			value1 = "No events.");
	}

	macro viewDay {
		CalendarNavigator.gotoView(viewType = "Day");

		var key_eventTitle = "${eventTitle}";

		Refresh();

		if (IsElementNotPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW")) {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");
		}
		else {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW");
		}
	}

	macro viewDefault {
		var key_eventTitle = "${eventTitle}";

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarScheduler.viewSpecificEventNotPresent(eventTitle = "${eventTitle}");

		AssertTextNotPresent(value1 = "${eventTitle}");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.viewSpecificEventNotPresent(eventTitle = "${eventTitle}");

		CalendarNavigator.gotoView(viewType = "Month");

		Navigator.gotoPage(pageName = "${pageName}");

		CalendarScheduler.viewSpecificEventNotPresent(eventTitle = "${eventTitle}");

		CalendarNavigator.gotoView(viewType = "Agenda");

		AssertTextEquals(
			locator1 = "CalendarAgendaView#EMPTY_MESSAGE",
			value1 = "No events.");

		CalendarScheduler.viewSpecificEventNotPresent(eventTitle = "${eventTitle}");

		CalendarNavigator.gotoView(viewType = "Week");
	}

	macro viewEventColor {
		var key_backgroundColor = "${eventBackgroundColorRgb}";
		var key_eventTitle = "${eventTitle}";
		var key_fontColor = "${eventFontColorRgb}";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_BACKGROUND_COLOR");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_FONT_COLOR");

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_BACKGROUND_COLOR_DEFAULT");

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_FONT_COLOR_DEFAULT");
	}

	macro viewEventDuration {
		var key_eventTitle = "${eventTitle}";

		if ("${minutes}" == "15") {
			var key_pixelHeight = "26";
		}
		else if ("${minutes}" == "30") {
			var key_pixelHeight = "26";
		}
		else if ("${minutes}" == "60") {
			var key_pixelHeight = "52";
		}
		else if ("${minutes}" == "120") {
			var key_pixelHeight = "104";
		}

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_HEIGHT");
	}

	macro viewEventTimesViaDialogBox {
		AssertTextEquals.assertPartialText(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_WHEN_FIELD",
			value1 = "${startDateTime}");

		AssertTextEquals.assertPartialText(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_WHEN_FIELD",
			value1 = "${endDateTime}");
	}

	macro viewEventTitleViaDialogBox {
		if (IsVisible(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EVENT_TITLE")) {
			AssertTextEquals(
				locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EVENT_TITLE",
				value1 = "${eventTitle}");
		}
		else {
			AssertTextEquals(
				locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_EVENT_TITLE_GUEST",
				value1 = "${eventTitle}");
		}
	}

	macro viewEventUsersViaDialogBox {
		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_USERS_LABEL",
			value1 = "Users:");

		for (var user : list "${usersList}") {
			AssertTextEquals.assertPartialText(
				locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_USERS_FIELD",
				value1 = "${user}");
		}
	}

	macro viewEventWithReminders {
		CalendarNavigator.gotoView(viewType = "Week");

		var key_eventTitle = "${eventTitle}";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC_REMINDER_ICON");
	}

	macro viewFirstHour {
		CalendarNavigator.gotoView(viewType = "Day");

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_DAY_FIRST_HOUR",
			value1 = "${firstHour}");

		CalendarNavigator.gotoView(viewType = "Week");

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_WEEK_FIRST_HOUR",
			value1 = "${firstHour}");
	}

	macro viewLastHour {
		CalendarNavigator.gotoView(viewType = "Day");

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_DAY_LAST_HOUR",
			value1 = "${lastHour}");

		CalendarNavigator.gotoView(viewType = "Week");

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_WEEK_LAST_HOUR",
			value1 = "${lastHour}");
	}

	macro viewLocalizedEvent {
		CalendarNavigator.gotoView(viewType = "${viewTypeLocalized}");

		AssertElementPresent(
			key_eventTitle = "${eventTitle}",
			locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");
	}

	macro viewMonth {
		CalendarNavigator.gotoView(viewType = "Month");

		var key_eventTitle = "${eventTitle}";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_MONTH_VIEW");

		if (("${numberOfOccurrences}" == "2") && ("${frequency}" == "Daily")) {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_REPEATING_DAILY_REPEATED_EVENT_WEEK_AND_MONTH_VIEW");
		}

		if (("${numberOfOccurrences}" == "2") && ("${frequency}" == "Weekly")) {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_REPEATING_WEEKLY_REPEATED_EVENT_WEEK_AND_MONTH_VIEW");
		}

		if (isSet(eventNumber)) {
			var key_eventNumber = "${eventNumber}";

			if (IsElementPresent(locator1 = "CalendarMonthView#SCHEDULER_EVENT_MONTH_VIEW_SHOW_MORE_LINK")) {
				AssertClick(
					locator1 = "CalendarMonthView#SCHEDULER_EVENT_MONTH_VIEW_SHOW_MORE_LINK",
					value1 = "Show ${eventNumber} more");

				AssertElementPresent(locator1 = "CalendarMonthView#SCHEDULER_EVENT_MONTH_VIEW_SHOW_MORE_DIALOG_BOX");

				while (IsElementPresent(locator1 = "xpath=(//div[contains(@class,'scheduler-view-table scheduler-view-month')]//div[contains(@class,'calendar-portlet-event')]/div[contains(.,'${key_eventTitle}')])[${i}]")) {
					AssertElementPresent(locator1 = "xpath=(//div[contains(@class,'scheduler-view-table scheduler-view-month')]//div[contains(@class,'calendar-portlet-event')]/div[contains(.,'${key_eventTitle}')])[${i}]");

					AssertTextEquals(
						locator1 = "xpath=(//div[contains(@class,'scheduler-view-table scheduler-view-month')]//div[contains(@class,'calendar-portlet-event')]/div[contains(.,'${key_eventTitle}')])[${i}]",
						value1 = "${eventTitle}");

					var i = ${i} + 1;
				}

				AssertClick(
					locator1 = "CalendarMonthView#SCHEDULER_EVENT_MONTH_VIEW_SHOW_MORE_CLOSE_LINK",
					value1 = "Close");
			}
		}
	}

	macro viewNoRSVP {
		var setDates = "${setDates}";

		if ("${setDates}" == "true") {
			CalendarScheduler.selectSpecificEventNoRefresh(
				eventTitle = "${eventTitle}",
				eventToday = "${eventToday}");
		}
		else {
			CalendarScheduler.selectSpecificEvent(
				eventTitle = "${eventTitle}",
				eventToday = "${eventToday}");
		}

		var key_rsvp = "Yes";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_ACTIVE");

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_INACTIVE");

		var key_rsvp = "Maybe";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_ACTIVE");

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_INACTIVE");

		var key_rsvp = "No";

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_ACTIVE");

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_INACTIVE");
	}

	macro viewRSVP {
		CalendarScheduler.selectSpecificEvent(
			eventTitle = "${eventTitle}",
			eventToday = "${eventToday}");

		var key_rsvp = "${rsvp}";

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_EVENT_DIALOG_BOX_ATTEND_INACTIVE",
			value1 = "${rsvp}");
	}

	macro viewSelectedView {
		var viewUppercase = StringUtil.upperCase("${view}");

		AssertElementPresent(locator1 = "Calendar#VIEW_${viewUppercase}_BUTTON_ACTIVE");

		AssertElementPresent.assertVisible(locator1 = "Calendar#SCHEDULER_VIEW_${viewUppercase}");
	}

	macro viewShowMoreLocalizedViaDayView {
		AssertClick(
			locator1 = "Calendar#VIEW_DAY_BUTTON",
			value1 = "${viewTypeLocalized}");

		Pause(locator1 = "10000");

		var key_messageLocalized = "${messageLocalized}";

		if (!(IsElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_DAY_SHOW_MORE_LOCALIZED"))) {
			Click(locator1 = "Calendar#VIEW_NEXT_BUTTON");
		}

		if (!(IsElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_DAY_SHOW_MORE_LOCALIZED"))) {
			Click(locator1 = "Calendar#VIEW_PREVIOUS_BUTTON");
		}

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_DAY_SHOW_MORE_LOCALIZED",
			value1 = "${messageLocalized}");
	}

	macro viewShowMoreLocalizedViaMonthView {
		AssertClick(
			locator1 = "Calendar#VIEW_MONTH_BUTTON",
			value1 = "${viewTypeLocalized}");

		Pause(locator1 = "5000");

		var key_messageLocalized = "${messageLocalized}";

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_MONTH_SHOW_MORE_LOCALIZED",
			value1 = "${messageLocalized}");
	}

	macro viewShowMoreLocalizedViaWeekView {
		AssertClick(
			locator1 = "Calendar#VIEW_WEEK_BUTTON",
			value1 = "${viewTypeLocalized}");

		Pause(locator1 = "5000");

		var key_messageLocalized = "${messageLocalized}";

		AssertTextEquals(
			locator1 = "Calendar#SCHEDULER_VIEW_WEEK_SHOW_MORE_LOCALIZED",
			value1 = "${messageLocalized}");
	}

	macro viewSpecificEventNotPresent {
		var key_eventTitle = "${eventTitle}";

		AssertElementNotPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");

		AssertTextNotPresent(value1 = "${eventTitle}");
	}

	macro viewSpecificEventNotVisible {
		var key_eventTitle = "${eventTitle}";

		AssertNotVisible(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");
	}

	macro viewWeek {
		CalendarNavigator.gotoView(viewType = "Week");

		var key_eventTitle = "${eventTitle}";

		if (IsElementNotPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW")) {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_SPECIFIC");
		}
		else {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_DAY_AND_WEEK_VIEW");
		}

		if (("${numberOfOccurrences}" == "2") && ("${frequency}" == "Daily")) {
			AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_EVENT_REPEATING_DAILY_REPEATED_EVENT_WEEK_AND_MONTH_VIEW");
		}
	}

	macro viewWeekStartDayViaWeekView {
		CalendarNavigator.gotoView(viewType = "Week");

		AssertTextEquals.assertPartialText(
			locator1 = "Calendar#SCHEDULER_VIEW_WEEK_WEEK_START_DAY",
			value1 = "${weekStartDay}");
	}

}