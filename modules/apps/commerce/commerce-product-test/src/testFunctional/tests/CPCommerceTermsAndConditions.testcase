@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp();
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "[Please Update]"
	@ignore = "Test Stub"
	@priority = "4"
	test AddADefaultDeliveryTerm {
		property portal.acceptance = "false";

		// TODO COMMERCE-8332 AddADefaultDeliveryTerm pending implementation

	}

	@description = "[Please Update]"
	@ignore = "Test Stub"
	@priority = "4"
	test AddADefaultPaymentTerm {
		property portal.acceptance = "false";

		// TODO COMMERCE-8319 AddADefaultPaymentTerm pending implementation

	}

	@description = "This is a test for COMMERCE-8333. Deleting an account default delivery term will revert to Use Priority Settings"
	@priority = "4"
	test RemoveADeliveryTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given two Delivery Terms and Condition entries with different priorities.") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 2",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "2");
		}

		task ("And given I create an account with a specific default delivery term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultDeliveryCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultDeliveryCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");
		}

		task ("When I delete the default delivery term that was linked to an account") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Delete",
				termsAndConditionName = "Terms and Condition Entry 1");

			CommercePaymentTerms.viewDeleteTermsAndConditionEntry(termsAndConditionName = "Terms and Condition Entry 1");
		}

		task ("And I edit the account") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default payment is changed to "Use Priority Settings".") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry();
		}
	}

	@description = "This is a test for COMMERCE-8320. Delete an account default payment term will revert to "Use Priority Settings"."
	@priority = "4"
	test RemoveAPaymentTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given that I create two Terms and Conditions Payment Terms entries with different priorities.") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Payment Terms",
				valuePosition = "1");

			Click(locator1 = "Icon#BACK");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 2",
				termsAndConditionType = "Payment Terms",
				valuePosition = "2");
		}

		task ("And given I create an account with a specific default payment term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultPaymentCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.viewDefaultPaymentCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");
		}

		task ("When I delete the default payment term that was linked to an account") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Delete",
				termsAndConditionName = "Terms and Condition Entry 1");

			CommercePaymentTerms.viewDeleteTermsAndConditionEntry(termsAndConditionName = "Terms and Condition Entry 1");
		}

		task ("And when I edit the account") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the default payment is changed to "Use Priority Settings".") {
			Accounts.viewDefaultPaymentCommerceTermsEntry();
		}
	}

	@description = "This is a test for COMMERCE-8334. If the delivery term set for the account is changed to inactive, the default term remains shown but inactive"
	@priority = "4"
	test SetAnInactiveDeliveryTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given a new "Terms and Conditions" entry with the status to "Active".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Delivery Terms",
				valuePosition = "1");

			Click(locator1 = "Button#BACK");
		}

		task ("And given an account with a specific default delivery term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultDeliveryCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");
		}

		task ("When I set the delivery term that was linked to an account as "inactive".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Edit",
				termsAndConditionName = "Terms and Condition Entry 1");

			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");

			Button.clickPublish();

			Alert.viewSuccessMessage();
		}

		task ("And go into the account edit order page") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the inactive icon should appear") {
			Accounts.viewDefaultDeliveryCommerceTermsEntry(
				inactive = "true",
				termEntry = "terms-and-condition-entry-1");
		}

		task ("And when I move the mouse over the icon the word "Inactive" should appear.") {
			MouseOver(
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_DEFAULT_DELIVERY_ENTRY_INACTIVE_ICON",
				value1 = "Inactive term");
		}
	}

	@description = "This is a test for COMMERCE-8328. If the payment term set for the account is changed to inactive, the default term remains shown but inactive"
	@priority = "4"
	test SetAnInactivePaymentTermLinkedToAnAccountAsDefaultOne {
		property portal.acceptance = "false";

		task ("Given a new "Terms and Conditions" entry with status to "Active".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.addTermsAndCondition(
				active = "true",
				termsAndConditionName = "Terms and Condition Entry 1",
				termsAndConditionType = "Payment Terms",
				valuePosition = "1");

			Click(locator1 = "Button#BACK");
		}

		task ("And given an account with a specific default payment term already selected.") {
			JSONAccountEntry.addAccountEntry(
				accountEntryName = "Account Name",
				accountEntryType = "Business");

			Accounts.openAccountsAdmin();

			LexiconEntry.gotoEntry(rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");

			Accounts.setDefaultPaymentCommerceTermsEntry(termEntry = "terms-and-condition-entry-1");
		}

		task ("When I set the payment term that was linked to an account as "inactive".") {
			CommerceNavigator.gotoPortlet(
				category = "Order Management",
				portlet = "Terms and Conditions");

			CommercePaymentTerms.gotoEntryMenuItem(
				menuItem = "Edit",
				termsAndConditionName = "Terms and Condition Entry 1");

			ClickNoError(locator1 = "ToggleSwitch#ACTIVE");

			Button.clickPublish();

			Alert.viewSuccessMessage();
		}

		task ("And I go into the account edit order page") {
			Accounts.openAccountsAdmin();

			Accounts.goToEntryMenuItem(
				menuItem = "Edit",
				rowEntry = "Account Name");

			Accounts.gotoAssigneeTab(assigneeTab = "Order Defaults");
		}

		task ("Then the inactive icon should appear") {
			Accounts.viewDefaultPaymentCommerceTermsEntry(
				inactive = "true",
				termEntry = "terms-and-condition-entry-1");
		}

		task ("And when I move the mouse over the icon the word "Inactive" should appear.") {
			MouseOver(
				locator1 = "Account#DEFAULT_ACCOUNT_TERMS_AND_CONDITION_DEFAULT_PAYMENT_ENTRY_INACTIVE_ICON",
				value1 = "Inactive term");
		}
	}

}