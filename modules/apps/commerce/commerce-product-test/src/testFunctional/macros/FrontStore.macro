definition {

	macro addInitializerProductToCart {
		var newItemCount = FrontStore.getCurrentCartItemCount(productName = "${productName}");

		Refresh();

		Type(
			key_productName = "${productName}",
			locator1 = "CommerceAccelerators#PRODUCT_CARD_QUANTITY_SELECTOR_INPUT_FIELD",
			value1 = "${productQuantity}");

		Click(
			key_productName = "${productName}",
			locator1 = "CommerceAccelerators#ADD_TO_CART_BUTTON");

		WaitForElementPresent(
			key_itemCount = "${newItemCount}",
			locator1 = "CommerceAccelerators#MINI_CART_BUTTON_DATA_BADGE_COUNT");
	}

	macro addToCartFromProductDetails {
		var newItemCount = FrontStore.getCurrentCartItemCount(productName = "${productName}");

		Refresh();

		if (isSet(optionNamesAndValues)) {
			for (var optionNameAndValue : list "${optionNamesAndValues}") {
				var optionName = StringUtil.extractFirst("${optionNameAndValue}", ":");
				var optionValue = StringUtil.extractLast("${optionNameAndValue}", ":");

				FrontStore.selectAssociatedFSOptionsValue(
					fsOptionName = "${optionName}",
					fsOptionValue = "${optionValue}");
			}
		}

		WaitForElementPresent(
			key_productSku = "${productSku}",
			locator1 = "CommerceFrontStore#FS_PRODUCT_SKU");

		Click(locator1 = "CommerceAccelerators#ADD_TO_CART_BUTTON_PRODUCT_DETAILS_PAGE");

		WaitForElementPresent(
			key_itemCount = "${newItemCount}",
			locator1 = "CommerceAccelerators#MINI_CART_BUTTON_DATA_BADGE_COUNT");
	}

	macro assertProductDetails {
		if (isSet(productName)) {
			AssertElementPresent(
				locator1 = "CommerceFrontStore#FS_PRODUCT_NAME",
				value1 = "${productName}");
		}

		if (isSet(productStockQuantity)) {
			AssertElementPresent(
				locator1 = "CommerceFrontStore#FS_PRODUCT_STOCK_QUANTITY",
				value1 = "${productStockQuantity}");
		}

		if (isSet(productAvailability)) {
			AssertElementPresent(
				key_availability = "${productAvailability}",
				locator1 = "CommerceFrontStore#FS_PRODUCT_AVAILABILITY");
		}

		if (isSet(productSKU)) {
			AssertElementPresent(
				key_detail = "SKU",
				locator1 = "CommerceFrontStore#FS_PRODUCT_DETAIL",
				value1 = "${productSKU}");
		}

		if (isSet(productMPN)) {
			AssertElementPresent(
				key_detail = "MPN",
				locator1 = "CommerceFrontStore#FS_PRODUCT_DETAIL",
				value1 = "${productMPN}");
		}

		if (isSet(productListPrice)) {
			AssertElementPresent(
				locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE",
				value1 = "${productListPrice}");
		}

		AssertElementPresent(
			key_fsProductImage = "",
			locator1 = "CommerceFrontStore#FS_PRODUCT_IMAGE");
	}

	macro assertPromoPrice {
		AssertTextEquals.assertPartialText(
			key_productName = "${productName}",
			locator1 = "CommerceFrontStore#FS_PRODUCT_VALUE_PROMO_PRICE",
			value1 = "${promoPrice}");

		AssertTextEquals.assertPartialText(
			key_productName = "${productName}",
			locator1 = "CommerceFrontStore#FS_PRODUCT_VALUE_INACTIVE_PRICE",
			value1 = "${basePrice}");
	}

	macro getCurrentCartItemCount {
		CommerceNavigator.gotoMiniCart();

		var currentItemCount = selenium.getAttribute("//div[contains(@class,'mini-cart')]/button[contains(@class,'mini-cart-opener') and @data-badge-count]@data-badge-count");

		if (IsElementPresent(key_cartItemName = "${productName}", locator1 = "CommerceAccelerators#MINI_CART_ITEM_NAME")) {
			var newItemCount = "${currentItemCount}";
		}
		else {
			var newItemCount = ${currentItemCount} + 1;
		}

		return "${newItemCount}";
	}

	macro selectAssociatedFSOptionsValue {
		Click(
			key_optionName = "${fsOptionName}",
			locator1 = "CommerceFrontStore#FS_PRODUCT_OPTIONS_SELECT");

		Click(
			key_optionValue = "${fsOptionValue}",
			locator1 = "CommerceFrontStore#FS_PRODUCT_OPTION");
	}

	macro viewMiniCart {
		FrontStore.viewMiniCartItems(
			cartItemNames = "${cartItemNames}",
			cartItemOption = "${cartItemOptions}",
			cartItemPriceValues = "${cartItemPriceValues}",
			cartItemQuantities = "${cartItemQuantities}",
			cartItemSkUs = "${cartItemSkUs}");

		if (isSet(cartSummaryQuantity)) {
			AssertTextEquals(
				key_summaryTableItem = "Quantity",
				locator1 = "CommerceAccelerators#MINI_CART_SUMMARY_TABLE_ITEM",
				value1 = "${cartSummaryQuantity}");
		}

		if (isSet(cartSummarySubtotal)) {
			AssertTextEquals.assertPartialText(
				key_summaryTableItem = "Subtotal",
				locator1 = "CommerceAccelerators#MINI_CART_SUMMARY_TABLE_ITEM",
				value1 = "$ ${cartSummarySubtotal}");
		}

		if (isSet(cartSummaryOrderDiscount)) {
			AssertTextEquals.assertPartialText(
				key_summaryTableItem = "Order Discount",
				locator1 = "CommerceAccelerators#MINI_CART_SUMMARY_TABLE_ITEM",
				value1 = "$ ${cartSummaryOrderDiscount}");
		}

		if (isSet(cartSummaryTotal)) {
			AssertTextEquals.assertPartialText(
				locator1 = "CommerceAccelerators#MINI_CART_SUMMARY_TABLE_TOTAL",
				value1 = "$ ${cartSummaryTotal}");
		}
	}

	macro viewMiniCartItem {
		AssertTextEquals(
			key_cartItemSku = "${cartItemSku}",
			locator1 = "CommerceAccelerators#MINI_CART_ITEM_NAME_USING_SKU",
			value1 = "${cartItemName}");

		AssertTextEquals(
			key_cartItemSku = "${cartItemSku}",
			locator1 = "CommerceAccelerators#MINI_CART_ITEM_SKU",
			value1 = "${cartItemSku}");

		AssertTextEquals(
			key_cartItemSku = "${cartItemSku}",
			locator1 = "CommerceAccelerators#MINI_CART_ITEM_QUANTITY",
			value1 = "${cartItemQuantity}");

		if (isSet(cartItemPriceValue)) {
			AssertTextEquals.assertPartialText(
				key_cartItemSku = "${cartItemSku}",
				locator1 = "CommerceAccelerators#MINI_CART_ITEM_PRICE_VALUE",
				value1 = "$ ${cartItemPriceValue}");
		}

		AssertElementPresent(
			key_cartItemSku = "${cartItemSku}",
			locator1 = "CommerceAccelerators#MINI_CART_ITEM_THUMBNAIL");

		if (isSet(cartItemOption)) {
			AssertTextEquals(
				key_cartItemSku = "${cartItemSku}",
				locator1 = "CommerceAccelerators#MINI_CART_ITEM_INFO_EXTRA",
				value1 = "${cartItemOption}");
		}
	}

	macro viewMiniCartItems {
		var count = StringUtil.count("${cartItemSkUs}", ",");

		while ("${count}" != "0") {
			var cartItemName = StringUtil.extractFirst("${cartItemNames}", ",");
			var cartItemPriceValue = StringUtil.extractFirst("${cartItemPriceValues}", ",");
			var cartItemQuantity = StringUtil.extractFirst("${cartItemQuantities}", ",");
			var cartItemSku = StringUtil.extractFirst("${cartItemSkUs}", ",");

			FrontStore.viewMiniCartItem(
				cartItemName = "${cartItemName}",
				cartItemPriceValue = "${cartItemPriceValue}",
				cartItemQuantity = "${cartItemQuantity}",
				cartItemSku = "${cartItemSku}");

			var count = ${count} - 1;
			var cartItemNames = StringUtil.replaceFirst("${cartItemNames}", "${cartItemName},", "");
			var cartItemPriceValues = StringUtil.replaceFirst("${cartItemPriceValues}", "${cartItemPriceValue},", "");
			var cartItemQuantities = StringUtil.replaceFirst("${cartItemQuantities}", "${cartItemQuantity},", "");
			var cartItemSkUs = StringUtil.replaceFirst("${cartItemSkUs}", "${cartItemSku},", "");
		}
	}

	macro viewProductDetail {
		AssertTextEquals(
			locator1 = "CommerceFrontStore#FS_PRODUCT_NAME",
			value1 = "${fsProductName}");

		if (IsElementPresent(locator1 = "CommerceFrontStore#FS_PRODUCT_OPTIONS_SELECT")) {
			for (var fsOptionValues : list "${fsOptionValuesList}") {
				var fsOptionValue = StringUtil.extractFirst("${fsOptionValues}", ":");
				var fsPrice = StringUtil.extractLast("${fsOptionValues}", ":");
				var fsOptionValueUppercase = StringUtil.upperCase("${fsOptionValue}");

				FrontStore.selectAssociatedFSOptionsValue(
					fsOptionName = "${fsOptionName}",
					fsOptionValue = "${fsOptionValue}");

				echo("Checking ${fsOptionValue} ${fsProductName} SKU is correct...");

				AssertElementPresent(
					key_productSku = "${fsOptionValueUppercase}SKU",
					locator1 = "CommerceFrontStore#FS_PRODUCT_SKU");

				echo("Checking ${fsOptionValue} ${fsProductName} price is correct...");

				AssertTextEquals.assertPartialText(
					locator1 = "CommerceAccelerators#PRODUCT_DETAILS_LIST_PRICE",
					value1 = "${fsPrice}");

				echo("Checking ${fsOptionValue} ${fsProductName} image is correct...");

				AssertElementPresent(
					key_fsProductImage = "${fsOptionValue}",
					locator1 = "CommerceFrontStore#FS_PRODUCT_IMAGE",
					value1 = "${fsOptionValue}");
			}
		}
	}

}