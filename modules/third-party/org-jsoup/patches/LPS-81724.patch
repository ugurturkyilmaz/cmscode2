diff --git a/org/jsoup/nodes/Element.java b/org/jsoup/nodes/Element.java
index caf1110..00f06bd 100644
--- a/org/jsoup/nodes/Element.java
+++ b/org/jsoup/nodes/Element.java
@@ -35,6 +35,7 @@ import java.util.regex.PatternSyntaxException;
  */
 public class Element extends Node {
     private Tag tag;
+    private boolean useSquareBrackets;
 
     private static final Pattern classSplit = Pattern.compile("\\s+");
 
@@ -47,6 +48,17 @@ public class Element extends Node {
     }
 
     /**
+     * Create a new, standalone element with posibility to use square brackets
+     * instead of normal "<" and ">" characters;
+     * @param tag tag name
+     */
+    public Element(String tag, boolean useSquareBrackets) {
+        this(tag);
+
+        this.useSquareBrackets = useSquareBrackets;
+    }
+
+    /**
      * Create a new, standalone Element. (Standalone in that is has no parent.)
      * 
      * @param tag tag of this element
@@ -1213,19 +1225,19 @@ public class Element extends Node {
             }
         }
         accum
-                .append("<")
+                .append(useSquareBrackets ? "[" : "<")
                 .append(tagName());
         attributes.html(accum, out);
 
         // selfclosing includes unknown tags, isEmpty defines tags that are always empty
         if (childNodes.isEmpty() && tag.isSelfClosing()) {
             if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())
-                accum.append('>');
+                accum.append(useSquareBrackets ? ']' : '>');
             else
-                accum.append(" />"); // <img> in html, <img /> in xml
+                accum.append(useSquareBrackets ? " /]" : " />"); // <img> in html, <img /> in xml
         }
         else
-            accum.append(">");
+            accum.append(useSquareBrackets ? "]" : ">");
     }
 
 	void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
@@ -1234,7 +1246,7 @@ public class Element extends Node {
                     tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))
             )))
                 indent(accum, depth, out);
-            accum.append("</").append(tagName()).append(">");
+            accum.append(useSquareBrackets ? "[/" : "</").append(tagName()).append(useSquareBrackets ? "]" : ">");
         }
     }
 
@@ -1288,3 +1300,4 @@ public class Element extends Node {
         return (Element) super.clone();
     }
 }
+/* @generated */
