diff --git a/org/jdom2/input/SAXBuilder.java b/org/jdom2/input/SAXBuilder.java
index 9bff5bde35c9a..758c1cb4f5898 100644
--- a/org/jdom2/input/SAXBuilder.java
+++ b/org/jdom2/input/SAXBuilder.java
@@ -192,9 +192,6 @@ public class SAXBuilder implements SAXEngine {
 	/** XMLFilter instance to use */
 	private XMLFilter saxXMLFilter = null;
 
-	/** Whether expansion of entities should occur */
-	private boolean expand = true;
-
 	/** Whether to ignore ignorable whitespace */
 	private boolean ignoringWhite = false;
 
@@ -690,7 +687,7 @@ public class SAXBuilder implements SAXEngine {
 	 */
 	@Override
 	public boolean getExpandEntities() {
-		return expand;
+		return false;
 	}
 
 	/**
@@ -717,7 +714,6 @@ public class SAXBuilder implements SAXEngine {
 	 *        occur.
 	 */
 	public void setExpandEntities(final boolean expand) {
-		this.expand = expand;
 		engine = null;
 	}
 
@@ -847,7 +843,7 @@ public class SAXBuilder implements SAXEngine {
 		// Create and configure the content handler.
 		final SAXHandler contentHandler = handlerfac.createSAXHandler(jdomfac);
 
-		contentHandler.setExpandEntities(expand);
+		contentHandler.setExpandEntities(false);
 		contentHandler.setIgnoringElementContentWhitespace(ignoringWhite);
 		contentHandler.setIgnoringBoundaryWhitespace(ignoringBoundaryWhite);
 
@@ -989,23 +985,20 @@ public class SAXBuilder implements SAXEngine {
 		// XXX It might make sense to setEntityResolver() with a resolver
 		// that simply ignores external general entities
 		try {
-			if (parser.getFeature(SAX_FEATURE_EXTERNAL_ENT) != expand) {
-				parser.setFeature(SAX_FEATURE_EXTERNAL_ENT, expand);
-			}
+			parser.setFeature(SAX_FEATURE_EXTERNAL_ENT, false);
 		} catch (final SAXException e) { /* Ignore... */
 		}
 
 		// Try setting the DeclHandler if entity expansion is off
-		if (!expand) {
-			try {
-				parser.setProperty(SAX_PROPERTY_DECLARATION_HANDLER,
-						contentHandler);
-				success = true;
-			} catch (final SAXNotSupportedException e) {
-				// No lexical reporting available
-			} catch (final SAXNotRecognizedException e) {
-				// No lexical reporting available
-			}
+
+		try {
+			parser.setProperty(SAX_PROPERTY_DECLARATION_HANDLER,
+					contentHandler);
+			success = true;
+		} catch (final SAXNotSupportedException e) {
+			// No lexical reporting available
+		} catch (final SAXNotRecognizedException e) {
+			// No lexical reporting available
 		}
 
 	}
@@ -1303,3 +1296,4 @@ public class SAXBuilder implements SAXEngine {
 	}
 
 }
+/* @generated */
\ No newline at end of file
