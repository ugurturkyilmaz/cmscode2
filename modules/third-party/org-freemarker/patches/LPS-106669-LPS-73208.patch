diff --git a/freemarker/ext/jsp/TagTransformModel.java b/freemarker/ext/jsp/TagTransformModel.java
index 55b0272b53c5..625a547006ba 100644
--- a/freemarker/ext/jsp/TagTransformModel.java
+++ b/freemarker/ext/jsp/TagTransformModel.java
@@ -20,10 +20,9 @@
 package freemarker.ext.jsp;
 
 import java.beans.IntrospectionException;
-import java.io.CharArrayReader;
-import java.io.CharArrayWriter;
 import java.io.IOException;
 import java.io.Reader;
+import java.io.StringReader;
 import java.io.Writer;
 import java.util.Map;
 
@@ -36,6 +35,7 @@ import javax.servlet.jsp.tagext.SimpleTag;
 import javax.servlet.jsp.tagext.Tag;
 import javax.servlet.jsp.tagext.TryCatchFinally;
 
+import freemarker.ext.jsp.internal.WriterFactoryUtil;
 import freemarker.log.Logger;
 import freemarker.template.TemplateModelException;
 import freemarker.template.TemplateTransformModel;
@@ -98,7 +98,7 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
      * An implementation of BodyContent that buffers it's input to a char[].
      */
     static class BodyContentImpl extends BodyContent {
-        private CharArrayWriter buf;
+        private Writer buf;
 
         BodyContentImpl(JspWriter out, boolean buffer) {
             super(out);
@@ -106,7 +106,7 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
         }
 
         void initBuffer() {
-            buf = new CharArrayWriter();
+            buf = WriterFactoryUtil.createWriter();
         }
 
         @Override
@@ -119,7 +119,7 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
         @Override
         public void clear() throws IOException {
             if (buf != null) {
-                buf = new CharArrayWriter();
+                buf = WriterFactoryUtil.createWriter();
             } else {
                 throw new IOException("Can't clear");
             }
@@ -128,7 +128,7 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
         @Override
         public void clearBuffer() throws IOException {
             if (buf != null) {
-                buf = new CharArrayWriter();
+                buf = WriterFactoryUtil.createWriter();
             } else {
                 throw new IOException("Can't clear");
             }
@@ -270,6 +270,26 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
             }
         }
 
+        @Override
+        public void write(String s) throws IOException {
+            if(buf != null) {
+                buf.write(s);
+            }
+            else {
+                getEnclosingWriter().write(s);
+            }
+        }
+
+        @Override
+        public void write(String s, int off, int len) throws IOException {
+            if(buf != null) {
+                buf.write(s, off, len);
+            }
+            else {
+                getEnclosingWriter().write(s, off, len);
+            }
+        }
+
         @Override
         public String getString() {
             return buf.toString();
@@ -277,12 +297,12 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
 
         @Override
         public Reader getReader() {
-            return new CharArrayReader(buf.toCharArray());
+            return new StringReader(buf.toString());
         }
 
         @Override
         public void writeOut(Writer out) throws IOException {
-            buf.writeTo(out);
+            out.write(buf.toString());
         }
 
     }
@@ -418,3 +438,4 @@ class TagTransformModel extends JspTagModelBase implements TemplateTransformMode
         
     }
 }
+/* @generated */
