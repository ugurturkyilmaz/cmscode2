/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies;

import io.swagger.annotations.ApiParam;

import java.util.Collections;
import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Size;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author Peter Shin
 */
@RestController
public class JavaParameterAnnotations {

	@RequestMapping(
		method = RequestMethod.GET, params = {"param1", "param2", "param3"},
		value = "/method1"
	)
	public List<String> method1(
		@RequestHeader(name = "param1") @Size(min = 1) @Valid String param1,
		@RequestHeader(name = "param2") @Size(min = 1) @Valid String param2,
		String param3) {

		return Collections.emptyList();
	}

	@RequestMapping(
		method = RequestMethod.GET, params = {"param1", "param2"},
		value = "/method2"
	)
	public List<String> method2(
		@ApiParam("param1") @PathVariable("param1") Long param1,
		String param2) {

		return Collections.emptyList();
	}

}