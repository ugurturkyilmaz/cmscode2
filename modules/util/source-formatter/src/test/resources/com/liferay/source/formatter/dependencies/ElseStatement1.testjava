/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies;

import com.liferay.document.library.kernel.exception.FileNameException;

/**
 * @author Hugo Huijser
 */
public class ElseStatement1 {

	public String getFileExtension(String fileName) throws FileNameException {
		int x = fileName.indexOf(".");

		if (x == -1) {
			throw new FileNameException();
		}
		else {
			return fileName.substring(x + 1);
		}
	}

	public int getInteger(String s) throws Exception {
		try {
			return Integer.valueOf(s);
		}
		catch (Exception exception) {
			if (exception instanceof NumberFormatException) {
				return -1;
			}
			else {
				throw new Exception(exception);
			}
		}
	}

	public boolean hasValue(List<String> list, String value) {
		for (String s : list) {
			if (!s.equals(value)) {
				continue;
			}
			else {
				return true;
			}
		}

		return false;
	}

	public boolean isNull(String s) {
		if (s == null) {
			return true;
		}
		else {
			return false;
		}
	}

}