<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ include file="/init.jsp" %>

<div>
	<h1>This is header 1</h1>

	<h1>This is header 2 </h1>
</div>

<%
String s = "";

AnnouncementsRequestHelper announcementsRequestHelper = new AnnouncementsRequestHelper(request);

AnnouncementsDisplayContext announcementsDisplayContext = new DefaultAnnouncementsDisplayContext(announcementsRequestHelper);

if ((announcementsRequestHelper == null) || (announcementsDisplayContext == null)) {
	s = "test";
}

String redirect = ParamUtil.getString(request, "redirect");

String modelResource = ParamUtil.getString(request, "modelResource");

String modelResourceName = ResourceActionsUtil.getModelResource(request, modelResource);

if (redirect != null) {
	s = modelResource + modelResourceName;
}

LayoutSet privateLayoutSet = null;
LayoutSetPrototype privateLayoutSetPrototype = null;

if ((privateLayoutSet == null) || (privateLayoutSetPrototype == null)) {
	s = "test";
}

Map<String, Serializable> taskContextMap = optimizeImageSingleBackgroundTask.getTaskContextMap();

String configurationEntryUuid = (String)taskContextMap.get("configurationEntryUuid");

if (!taskContextMap.isEmpty() && (configurationEntryUuid.length > 0)) {
	s = "test";
}
%>